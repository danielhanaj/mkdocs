{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Przydatne skt\u00f3ty klawaiturowe w Linuxie: Komenda Emacs Komenda Vim Wynik Tab none uzupe\u0142nia nazw\u0119 pliku lub folderu Crtl+c none Zabija proces terminala Ctrl+z none Zawiesza proces terminala Ctrl+d x Usuwa znak ustawiony za pozycj\u0105 kursora Ctrl+l %d Czy\u015bci screen tak jak komenda clear Ctrl+a 0 Przesuwa kursor na pocz\u0105tek linii Ctrl+e $ Przesuwa kursor na koniec linii Alt+b b Przesuwa kursor na pocz\u0105tek poprzedniego s\u0142owa lub znaku interpunkcyjnego Alt+f w Przesuwa kursor na koniec kolejnego s\u0142owa lub znaku interpunkcyjnego Ctrl+b h Przesuwa kursor o jeden znak wstecz Ctrl+f l Przesuwa kursor o jeden znak do przodu Ctrl+u d0 Usuwa i kopiuje do schowka cz\u0119\u015b\u0107 linii przed kursorem Ctrl+k d$ Usuwa i kopiuje do schowka cz\u0119\u015bc linii za kursorem Ctrl+w Usuwa s\u0142owo przed kursorem Ctrl+y p Wstawia ostatni wyci\u0119ty tekst ze schowka Ctrl+p k Przchodzi do poprzedniej komendy z historii Ctrl+n Przechodzi do nast\u0119pnej komendy z historii Ctrl+r j przeszukuje komend\u0119 w historii Ctrl+shift+c yy kopiuje tekst Ctrl+shift+v p wstawia tekst W\u0142\u0105czanie VIM mode w konsoli Mo\u017cna aktywowa\u0107 vim mode tak by skr\u00f3ty vima dzia\u0142a\u0142y w konsoli Linuxa. by to zrobi\u0107 nale\u017cy wyda\u0107 polecenie: # Ustawia skr\u00f3ty klawiaturowe vima w konsoli Linuca set -o vi Komend\u0119 t\u0119 nale\u017cy doda\u0107 do .bashrc i wykona\u0107 polecenie $ source ~/.bashrc Aby aktywowac tryb vim nalezy najpierw wcisna\u0107 ESc","title":"Skr\u00f3ty klawiaturowe Linux"},{"location":"#przydatne-sktoty-klawaiturowe-w-linuxie","text":"Komenda Emacs Komenda Vim Wynik Tab none uzupe\u0142nia nazw\u0119 pliku lub folderu Crtl+c none Zabija proces terminala Ctrl+z none Zawiesza proces terminala Ctrl+d x Usuwa znak ustawiony za pozycj\u0105 kursora Ctrl+l %d Czy\u015bci screen tak jak komenda clear Ctrl+a 0 Przesuwa kursor na pocz\u0105tek linii Ctrl+e $ Przesuwa kursor na koniec linii Alt+b b Przesuwa kursor na pocz\u0105tek poprzedniego s\u0142owa lub znaku interpunkcyjnego Alt+f w Przesuwa kursor na koniec kolejnego s\u0142owa lub znaku interpunkcyjnego Ctrl+b h Przesuwa kursor o jeden znak wstecz Ctrl+f l Przesuwa kursor o jeden znak do przodu Ctrl+u d0 Usuwa i kopiuje do schowka cz\u0119\u015b\u0107 linii przed kursorem Ctrl+k d$ Usuwa i kopiuje do schowka cz\u0119\u015bc linii za kursorem Ctrl+w Usuwa s\u0142owo przed kursorem Ctrl+y p Wstawia ostatni wyci\u0119ty tekst ze schowka Ctrl+p k Przchodzi do poprzedniej komendy z historii Ctrl+n Przechodzi do nast\u0119pnej komendy z historii Ctrl+r j przeszukuje komend\u0119 w historii Ctrl+shift+c yy kopiuje tekst Ctrl+shift+v p wstawia tekst","title":"Przydatne skt\u00f3ty klawaiturowe w Linuxie:"},{"location":"#waczanie-vim-mode-w-konsoli","text":"Mo\u017cna aktywowa\u0107 vim mode tak by skr\u00f3ty vima dzia\u0142a\u0142y w konsoli Linuxa. by to zrobi\u0107 nale\u017cy wyda\u0107 polecenie: # Ustawia skr\u00f3ty klawiaturowe vima w konsoli Linuca set -o vi Komend\u0119 t\u0119 nale\u017cy doda\u0107 do .bashrc i wykona\u0107 polecenie $ source ~/.bashrc Aby aktywowac tryb vim nalezy najpierw wcisna\u0107 ESc","title":"W\u0142\u0105czanie VIM mode w konsoli"},{"location":"about/","text":"Dlaczego nale\u017cy si\u0119 nauczy\u0107 vi? Strona opisujaca podstawy VIM w calo Dlaczego mamy si\u0119 uczy\u0107 obs\u0142ugi vi, gdy we wsp\u00f3\u0142czesnym \u015bwiecie kr\u00f3luj\u0105 edytory graficzne i \u0142atwe w u\u017cyciu edytory dzia\u0142aj\u0105ce w trybie tekstowym, takie jak nano? Istniej\u0105 trzy wa\u017cne powody: vi jest zawsze dost\u0119pne. Mo\u017ce nam to uratowa\u0107 \u017cycie, je\u015bli dysponujemy systemem bez interfejsu graficznego, takim jak serwer zdalny lub system lokalny z uszkodzon\u0105 konfiguracj\u0105 X. nano, cho\u0107 coraz popularniejszy, nadal nie jest uniwersalny. POSIX, standard kompatybilno\u015bci system\u00f3w uniksowych, wymaga obecno\u015bci vi. vi jest lekki i szybki. Wiele zada\u0144 \u0142atwiej jest wykona\u0107 w vi, poniewa\u017c nie musimy przeszukiwa\u0107 menu edytor\u00f3w graficznych i oczekiwa\u0107 na wczytanie wielu megabajt\u00f3w. Ponadto vi zosta\u0142 zaprojektowany z my\u015bl\u0105 o szybko\u015bci wpisywania. Jak si\u0119 przekonamy, wy\u0107wiczony u\u017cytkownik vi nigdy nie musi podnosi\u0107 palc\u00f3w znad klawiatury podczas edycji.","title":"O stronie"},{"location":"about/#dlaczego-nalezy-sie-nauczyc-vi","text":"Strona opisujaca podstawy VIM w calo Dlaczego mamy si\u0119 uczy\u0107 obs\u0142ugi vi, gdy we wsp\u00f3\u0142czesnym \u015bwiecie kr\u00f3luj\u0105 edytory graficzne i \u0142atwe w u\u017cyciu edytory dzia\u0142aj\u0105ce w trybie tekstowym, takie jak nano? Istniej\u0105 trzy wa\u017cne powody: vi jest zawsze dost\u0119pne. Mo\u017ce nam to uratowa\u0107 \u017cycie, je\u015bli dysponujemy systemem bez interfejsu graficznego, takim jak serwer zdalny lub system lokalny z uszkodzon\u0105 konfiguracj\u0105 X. nano, cho\u0107 coraz popularniejszy, nadal nie jest uniwersalny. POSIX, standard kompatybilno\u015bci system\u00f3w uniksowych, wymaga obecno\u015bci vi. vi jest lekki i szybki. Wiele zada\u0144 \u0142atwiej jest wykona\u0107 w vi, poniewa\u017c nie musimy przeszukiwa\u0107 menu edytor\u00f3w graficznych i oczekiwa\u0107 na wczytanie wielu megabajt\u00f3w. Ponadto vi zosta\u0142 zaprojektowany z my\u015bl\u0105 o szybko\u015bci wpisywania. Jak si\u0119 przekonamy, wy\u0107wiczony u\u017cytkownik vi nigdy nie musi podnosi\u0107 palc\u00f3w znad klawiatury podczas edycji.","title":"Dlaczego nale\u017cy si\u0119 nauczy\u0107 vi?"},{"location":"Linux_Uprawnienia/Odczyt_Zapis_wykonywanie/","text":"Odczyt, zapis i wykonywanie Prawa dost\u0119pu do plik\u00f3w i katalog\u00f3w s\u0105 zdefiniowane pod wzgl\u0119dem uprawnie\u0144 do odczytu, zapisu oraz do wykonywania. Je\u015bli zerkniemy na wynik dzia\u0142ania polecenia ls, uzyskamy pewn\u0105 wskaz\u00f3wk\u0119 o sposobie implementacji: [me@linuxbox ~]$ > foo.txt [me@linuxbox ~]$ ls -l foo.txt -rw-rw-r-- 1 me me 0 2018-03-06 14:52 foo.txt 10 pierwszych znak\u00f3w na li\u015bcie to atrybuty pliku. Pierwszy znak oznacza typ pliku. W tabeli 9.1 wypisano cz\u0119sto u\u017cywane typy plik\u00f3w (istniej\u0105 te\u017c inne, mniej znane) Tabela 9.1. Typy plik\u00f3w Atrybut Typ pliku - Zwyk\u0142y plik. d Katalog. l Dowi\u0105zanie symboliczne. Zauwa\u017cmy, \u017ce w przypadku dowi\u0105za\u0144 symbolicznych pozosta\u0142e atrybuty pliku maj\u0105 zawsze posta\u0107 rwxrwxrwx i s\u0105 to warto\u015bci zast\u0119pcze. Rzeczywiste atrybuty plik\u00f3w s\u0105 przypisane do pliku, do kt\u00f3rego odwo\u0142uje si\u0119 dowi\u0105zanie symboliczne. c Specjalny plik znakowy. Ten typ pliku odnosi si\u0119 do urz\u0105dzenia przetwarzaj\u0105cego dane w postaci strumienia bit\u00f3w, na przyk\u0142ad do terminala czy mechanizmu /dev/null. b Specjalny plik blokowy. Ten typ pliku dotyczy urz\u0105dzenia przetwarzaj\u0105cego dane w postaci blok\u00f3w, na przyk\u0142ad dysku twardego lub czytnika DVD. Pozosta\u0142e dziewi\u0119\u0107 znak\u00f3w atrybut\u00f3w pliku nosi nazw\u0119 trybu pliku. Reprezentuj\u0105 one uprawnienia do odczytu, zapisu i wykonywania przez posiadacza pliku, grupy, do kt\u00f3rej plik jest przypisany, oraz przez wszystkich pozosta\u0142ych u\u017cytkownik\u00f3w. W\u0142a\u015bciciel Grupa \u015awiat rwx rwx rwx W tabeli 9.2 opisano efekty, jakie uzyskamy na poprzez ustawienie atrybut\u00f3w r, w i x dla plik\u00f3w i katalog\u00f3w. Tabela 9.2. Atrybuty uprawnie\u0144 Atrybut Pliki Katalogi r Zezwala na otwarcie i odczyt pliku. Zezwala na wy\u015bwietlanie zawarto\u015bci katalogu, o ile ustawione s\u0105 te\u017c uprawnienia do wykonywania. w Zezwala na zapis do pliku lub usuni\u0119cie zawarto\u015bci pliku; nie pozwala jednak na zmian\u0119 nazwy ani na usuni\u0119cie pliku. Mo\u017cliwo\u015b\u0107 usuwania i zmiany nazwy plik\u00f3w jest determinowana przez atrybuty katalogu. Zezwala na tworzenie, usuwanie i zmian\u0119 nazwy plik\u00f3w w katalogu, o ile ustawione s\u0105 te\u017c uprawnienia do wykonywania. x Zezwala na traktowanie pliku jako programu i na jego uruchamianie. Programy napisane w j\u0119zykach skryptowych mog\u0105 by\u0107 uruchamiane tylko wtedy, gdy zosta\u0142y tak\u017ce udost\u0119pnione do odczytu. Zezwala na przechodzenie do katalogu, na przyk\u0142ad w nast\u0119puj\u0105cy spos\u00f3b: cd katalog Tabela 9.3. Przyk\u0142ady atrybut\u00f3w uprawnie\u0144 Atrybuty plik\u00f3w Znaczenie -rwx------ Zwyk\u0142y plik udost\u0119pniony do odczytu, zapisu i wykonywania przez w\u0142a\u015bciciela pliku. Nikt inny nie ma dost\u0119pu. -rw------- Zwyk\u0142y plik udost\u0119pniony do odczytu i zapisu przez w\u0142a\u015bciciela pliku. Nikt inny nie ma dost\u0119pu. -rw-r--r-- Zwyk\u0142y plik udost\u0119pniony do odczytu i zapisu przez w\u0142a\u015bciciela pliku. Cz\u0142onkowie grupy oraz pozostali u\u017cytkownicy maj\u0105 prawo do odczytu pliku. -rwxr-xr-x Zwyk\u0142y plik udost\u0119pniony do odczytu, zapisu i uruchomienia przez w\u0142a\u015bciciela pliku. Wszyscy pozostali u\u017cytkownicy mog\u0105 odczyta\u0107 i uruchomi\u0107 plik. -rw-rw---- Zwyk\u0142y plik udost\u0119pniony do odczytu i zapisu tylko przez w\u0142a\u015bciciela pliku i cz\u0142onk\u00f3w grupy, do kt\u00f3rej przypisany jest plik. Lrwxrwxrwx Dowi\u0105zanie symboliczne. Wszystkie dowi\u0105zania symboliczne posiadaj\u0105 uprawnienia zast\u0119pcze. Rzeczywiste uprawnienia s\u0105 przypisane do pliku wskazywanego przez dowi\u0105zanie symboliczne. drwxrwx--- Katalog. W\u0142a\u015bciciel i cz\u0142onkowie grupy mog\u0105 wej\u015b\u0107 do katalogu oraz tworzy\u0107, zmienia\u0107 nazwy i usuwa\u0107 pliki wewn\u0105trz katalogu. drwxr-x--- Katalog. W\u0142a\u015bciciel mo\u017ce wej\u015b\u0107 do katalogu oraz tworzy\u0107, zmienia\u0107 nazwy i usuwa\u0107 pliki wewn\u0105trz katalogu. Cz\u0142onkowie grupy mog\u0105 wej\u015b\u0107 do katalogu, ale nie mog\u0105 tworzy\u0107, usuwa\u0107 i zmienia\u0107 nazw plik\u00f3w.","title":"Odczyt Zapis i Wykonywanie"},{"location":"Linux_Uprawnienia/Odczyt_Zapis_wykonywanie/#odczyt-zapis-i-wykonywanie","text":"Prawa dost\u0119pu do plik\u00f3w i katalog\u00f3w s\u0105 zdefiniowane pod wzgl\u0119dem uprawnie\u0144 do odczytu, zapisu oraz do wykonywania. Je\u015bli zerkniemy na wynik dzia\u0142ania polecenia ls, uzyskamy pewn\u0105 wskaz\u00f3wk\u0119 o sposobie implementacji: [me@linuxbox ~]$ > foo.txt [me@linuxbox ~]$ ls -l foo.txt -rw-rw-r-- 1 me me 0 2018-03-06 14:52 foo.txt 10 pierwszych znak\u00f3w na li\u015bcie to atrybuty pliku. Pierwszy znak oznacza typ pliku. W tabeli 9.1 wypisano cz\u0119sto u\u017cywane typy plik\u00f3w (istniej\u0105 te\u017c inne, mniej znane) Tabela 9.1. Typy plik\u00f3w Atrybut Typ pliku - Zwyk\u0142y plik. d Katalog. l Dowi\u0105zanie symboliczne. Zauwa\u017cmy, \u017ce w przypadku dowi\u0105za\u0144 symbolicznych pozosta\u0142e atrybuty pliku maj\u0105 zawsze posta\u0107 rwxrwxrwx i s\u0105 to warto\u015bci zast\u0119pcze. Rzeczywiste atrybuty plik\u00f3w s\u0105 przypisane do pliku, do kt\u00f3rego odwo\u0142uje si\u0119 dowi\u0105zanie symboliczne. c Specjalny plik znakowy. Ten typ pliku odnosi si\u0119 do urz\u0105dzenia przetwarzaj\u0105cego dane w postaci strumienia bit\u00f3w, na przyk\u0142ad do terminala czy mechanizmu /dev/null. b Specjalny plik blokowy. Ten typ pliku dotyczy urz\u0105dzenia przetwarzaj\u0105cego dane w postaci blok\u00f3w, na przyk\u0142ad dysku twardego lub czytnika DVD. Pozosta\u0142e dziewi\u0119\u0107 znak\u00f3w atrybut\u00f3w pliku nosi nazw\u0119 trybu pliku. Reprezentuj\u0105 one uprawnienia do odczytu, zapisu i wykonywania przez posiadacza pliku, grupy, do kt\u00f3rej plik jest przypisany, oraz przez wszystkich pozosta\u0142ych u\u017cytkownik\u00f3w. W\u0142a\u015bciciel Grupa \u015awiat rwx rwx rwx W tabeli 9.2 opisano efekty, jakie uzyskamy na poprzez ustawienie atrybut\u00f3w r, w i x dla plik\u00f3w i katalog\u00f3w. Tabela 9.2. Atrybuty uprawnie\u0144 Atrybut Pliki Katalogi r Zezwala na otwarcie i odczyt pliku. Zezwala na wy\u015bwietlanie zawarto\u015bci katalogu, o ile ustawione s\u0105 te\u017c uprawnienia do wykonywania. w Zezwala na zapis do pliku lub usuni\u0119cie zawarto\u015bci pliku; nie pozwala jednak na zmian\u0119 nazwy ani na usuni\u0119cie pliku. Mo\u017cliwo\u015b\u0107 usuwania i zmiany nazwy plik\u00f3w jest determinowana przez atrybuty katalogu. Zezwala na tworzenie, usuwanie i zmian\u0119 nazwy plik\u00f3w w katalogu, o ile ustawione s\u0105 te\u017c uprawnienia do wykonywania. x Zezwala na traktowanie pliku jako programu i na jego uruchamianie. Programy napisane w j\u0119zykach skryptowych mog\u0105 by\u0107 uruchamiane tylko wtedy, gdy zosta\u0142y tak\u017ce udost\u0119pnione do odczytu. Zezwala na przechodzenie do katalogu, na przyk\u0142ad w nast\u0119puj\u0105cy spos\u00f3b: cd katalog Tabela 9.3. Przyk\u0142ady atrybut\u00f3w uprawnie\u0144 Atrybuty plik\u00f3w Znaczenie -rwx------ Zwyk\u0142y plik udost\u0119pniony do odczytu, zapisu i wykonywania przez w\u0142a\u015bciciela pliku. Nikt inny nie ma dost\u0119pu. -rw------- Zwyk\u0142y plik udost\u0119pniony do odczytu i zapisu przez w\u0142a\u015bciciela pliku. Nikt inny nie ma dost\u0119pu. -rw-r--r-- Zwyk\u0142y plik udost\u0119pniony do odczytu i zapisu przez w\u0142a\u015bciciela pliku. Cz\u0142onkowie grupy oraz pozostali u\u017cytkownicy maj\u0105 prawo do odczytu pliku. -rwxr-xr-x Zwyk\u0142y plik udost\u0119pniony do odczytu, zapisu i uruchomienia przez w\u0142a\u015bciciela pliku. Wszyscy pozostali u\u017cytkownicy mog\u0105 odczyta\u0107 i uruchomi\u0107 plik. -rw-rw---- Zwyk\u0142y plik udost\u0119pniony do odczytu i zapisu tylko przez w\u0142a\u015bciciela pliku i cz\u0142onk\u00f3w grupy, do kt\u00f3rej przypisany jest plik. Lrwxrwxrwx Dowi\u0105zanie symboliczne. Wszystkie dowi\u0105zania symboliczne posiadaj\u0105 uprawnienia zast\u0119pcze. Rzeczywiste uprawnienia s\u0105 przypisane do pliku wskazywanego przez dowi\u0105zanie symboliczne. drwxrwx--- Katalog. W\u0142a\u015bciciel i cz\u0142onkowie grupy mog\u0105 wej\u015b\u0107 do katalogu oraz tworzy\u0107, zmienia\u0107 nazwy i usuwa\u0107 pliki wewn\u0105trz katalogu. drwxr-x--- Katalog. W\u0142a\u015bciciel mo\u017ce wej\u015b\u0107 do katalogu oraz tworzy\u0107, zmienia\u0107 nazwy i usuwa\u0107 pliki wewn\u0105trz katalogu. Cz\u0142onkowie grupy mog\u0105 wej\u015b\u0107 do katalogu, ale nie mog\u0105 tworzy\u0107, usuwa\u0107 i zmienia\u0107 nazw plik\u00f3w.","title":"Odczyt, zapis i wykonywanie"},{"location":"Linux_Uprawnienia/chmod_zmiana_trybu_pliku/","text":"chmod \u2014 zmiana trybu pliku Aby zmieni\u0107 tryb (uprawnienia) pliku lub katalogu, korzystamy z polecenia chmod. Nale\u017cy zapami\u0119ta\u0107, \u017ce tryb pliku lub katalogu mo\u017ce zmieni\u0107 tylko w\u0142a\u015bciciel pliku lub u\u017cytkownik uprzywilejowany. Polecenie chmod umo\u017cliwia zdefiniowanie trybu na dwa sposoby. Poprzez reprezentacj\u0119 \u00f3semkow\u0105. Poprzez reprezentacj\u0119 symboliczn\u0105. Najpierw om\u00f3wimy reprezentacj\u0119 \u00f3semkow\u0105. W notacji \u00f3semkowej do okre\u015blenia wzorca po\u017c\u0105danych uprawnie\u0144 wykorzystujemy liczby w systemie \u00f3semkowym. Poniewa\u017c w systemie \u00f3semkowym ka\u017cda cyfra reprezentuje trzy cyfry binarne, mo\u017cna j\u0105 \u0142atwo zmapowa\u0107 na schemat wykorzystywany do przechowywania trybu pliku. W tabeli 9.4 pokazano, co to oznacza. Tabela 9.4. Tryby plik\u00f3w w reprezentacji binarnej i \u00f3semkowej Reprezentacja \u00f3semkowa Reprezentacja binarna Tryb pliku 0 000 --- 1 001 --x 2 010 -w- 3 011 -wx 4 100 r-- 5 101 r-x 6 110 rw- 7 111 rwx CZYM U LICHA JEST SYSTEM \u00d3SEMKOWY? System \u00f3semkowy (o podstawie 8) oraz jego kuzyn, czyli system szesnastkowy (o podstawie 16), s\u0105 systemami liczbowymi cz\u0119sto wykorzystywanymi do wyra\u017cania liczb w informatyce. My, ludzie, liczymy w systemie opartym na liczbie 10, co wynika z faktu posiadania przez nas 10 palc\u00f3w (a przynajmniej przez wi\u0119kszo\u015b\u0107 z nas). Natomiast komputery zosta\u0142y wyposa\u017cone tylko w jeden palec i dlatego mog\u0105 wykonywa\u0107 obliczenia w systemie binarnym (o podstawie 2). Ich system liczbowy operuje tylko na dw\u00f3ch cyfrach: zero i jeden. To dlatego liczenie w systemie binarnym wygl\u0105da nast\u0119puj\u0105co: 0, 1, 10, 11, 100, 101, 110, 111, 1000, 1001, 1010, 1011 W systemie \u00f3semkowym liczymy z wykorzystaniem cyfr od zera do siedmiu, czyli: 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21\u2026 W systemie szesnastkowym korzystamy z cyfr od zera do dziewi\u0119ciu oraz dodatkowo z liter od A do F: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F, 10, 11, 12, 13\u2026 Chocia\u017c z \u0142atwo\u015bci\u0105 dostrze\u017cemy sens stosowania systemu dw\u00f3jkowego (komputery s\u0105 wyposa\u017cone tylko w jeden palec), to mo\u017cemy mie\u0107 w\u0105tpliwo\u015bci co do systemu \u00f3semkowego i szesnastkowego. Odpowied\u017a wi\u0105\u017ce si\u0119 z ludzk\u0105 wygod\u0105. Ma\u0142e porcje danych s\u0105 cz\u0119sto reprezentowane na komputerach jako wzorce bitowe. We\u017amy na przyk\u0142ad kolor RGB. W wi\u0119kszo\u015bci monitor\u00f3w ka\u017cdy piksel jest reprezentowany przez trzy komponenty koloru: 8 bit\u00f3w dla koloru czerwonego, 8 bit\u00f3w dla zielonego i 8 bit\u00f3w dla niebieskiego. Pi\u0119kny niebieski kolor zosta\u0142by zapisany w postaci 24-bitowej liczby: 010000110110111111001101 Czy ktokolwiek chcia\u0142by przez ca\u0142y dzie\u0144 odczytywa\u0107 i zapisywa\u0107 takie liczby? Nie s\u0105dz\u0119. Tutaj pojawia si\u0119 potrzeba wykorzystania innego systemu numerycznego. Ka\u017cda cyfra w liczbie szesnastkowej reprezentuje cztery cyfry binarne. Dzi\u0119ki temu zapis naszego 24-bitowego koloru niebieskiego mo\u017cna skr\u00f3ci\u0107 do 6-cyfrowej liczby szesnastkowej: 436FCD. Poniewa\u017c cyfry w liczbie szesnastkowej odpowiadaj\u0105 bitom w liczbie binarnej, mo\u017cemy zauwa\u017cy\u0107, \u017ce czerwony komponent naszego koloru jest reprezentowany przez liczb\u0119 43, zielony przez 6F, a niebieski przez CD. Obecnie zapis szesnastkowy (zwykle okre\u015blany jako hex) jest cz\u0119\u015bciej stosowany ni\u017c \u00f3semkowy, jednak mo\u017cliwo\u015b\u0107 zapisu trzech bit\u00f3w liczby dw\u00f3jkowej w systemie \u00f3semkowym jest bardzo przydatna, o czym przekonamy si\u0119 niebawem. Za pomoc\u0105 trzech cyfr w systemie \u00f3semkowym mo\u017cemy ustawi\u0107 tryb pliku dla w\u0142a\u015bciciela, dla grupy, do kt\u00f3rej przypisany jest plik, i dla pozosta\u0142ych u\u017cytkownik\u00f3w. [me@linuxbox ~]$ > foo.txt [me@linuxbox ~]$ ls -l foo.txt -rw-rw-r-- 1 me me 0 2018-03-06 14:52 foo.txt [me@linuxbox ~]$ chmod 600 foo.txt [me@linuxbox ~]$ ls -l foo.txt -rw------- 1 me me 0 2018-03-06 14:52 foo.txt Przekazuj\u0105c argument 600, mogli\u015bmy ustawi\u0107 uprawnienia w\u0142a\u015bciciela do odczytu i zapisu oraz usun\u0105\u0107 uprawnienia grupy i pozosta\u0142ych u\u017cytkownik\u00f3w. Chocia\u017c zapami\u0119tanie mapowania mi\u0119dzy reprezentacj\u0105 \u00f3semkow\u0105 a binarn\u0105 mo\u017ce si\u0119 wydawa\u0107 pewn\u0105 niedogodno\u015bci\u0105, jednak w praktyce cz\u0119sto stosuje si\u0119 tylko kilka przypadk\u00f3w: 7 (rwx), 6 (rw-), 5 (r-x), 4 (r--) i 0 (---). chmod pozwala te\u017c na ustawienie trybu plik\u00f3w za pomoc\u0105 zapisu symbolicznego. Zapis symboliczny sk\u0142ada si\u0119 z trzech cz\u0119\u015bci. U\u017cytkownik, kt\u00f3rego dotyczy zmiana. Operacja, kt\u00f3ra zostanie wykonana. Uprawnienia, kt\u00f3re zostan\u0105 ustawione Aby okre\u015bli\u0107, kogo dotyczy zmiana, korzystamy z kombinacji znak\u00f3w u, g, o i a zgodnie z opisem w tabeli 9.5. Tabela 9.5. Zapis symboliczny polecenia chmod Symbol Znaczenie u Skr\u00f3t od ang. s\u0142owa user (\u201eu\u017cytkownik\u201d); oznacza w\u0142a\u015bciciela pliku lub katalogu. g Grupa. o Skr\u00f3t od ang. s\u0142owa other (\u201epozostali\u201d); oznacza wszystkich pozosta\u0142ych u\u017cytkownik\u00f3w. a Skr\u00f3t od ang. s\u0142owa all (\u201ewszyscy\u201d); obejmuje wszystkich u\u017cytkownik\u00f3w okre\u015blanych przez symbole u, g i o. Je\u015bli nie zdefiniujemy \u017cadnego znaku, domy\u015blnie zostanie u\u017cyta opcja all. Operacja mo\u017ce mie\u0107 posta\u0107 a+, co oznacza dodanie uprawnienia, a-, co oznacza odebranie uprawnienia, lub a=, co oznacza, \u017ce przypisane zostan\u0105 tylko niekt\u00f3re uprawnienia, a wszystkie pozosta\u0142e zostan\u0105 odebrane. Uprawnienia s\u0105 okre\u015blane z wykorzystaniem znak\u00f3w r, w oraz x. W tabeli 9.6 przedstawiono kilka przyk\u0142ad\u00f3w zapisu symbolicznego. Niekt\u00f3rzy wol\u0105 korzysta\u0107 z zapisu \u00f3semkowego; inni ceni\u0105 sobie zapis symboliczny. Zapis symboliczny ma t\u0119 przewag\u0119, \u017ce pozwala na ustawienie jednego atrybutu bez wp\u0142ywu na pozosta\u0142e. Na stronie podr\u0119cznika man polecenia chmod znajdziemy wi\u0119cej szczeg\u00f3\u0142\u00f3w oraz list\u0119 opcji. Uwa\u017cajmy na opcj\u0119 --recursive. Opcja ta sprawia, \u017ce polecenie zostanie wykonane zar\u00f3wno na plikach, jak i na katalogach. To dlatego nie jest tak przydatna, jak mog\u0142oby si\u0119 wydawa\u0107, poniewa\u017c rzadko chcemy, aby pliki i katalogi posiada\u0142y te same ustawienia uprawnie\u0144. Tabela 9.6. Przyk\u0142ady zapisu symbolicznego polecenia chmod Zapis Znaczenie u+x Nadaje w\u0142a\u015bcicielowi pliku uprawnienia do wykonywania. u-x Odbiera w\u0142a\u015bcicielowi pliku uprawnienia do wykonywania. +x Nadaje uprawnienia do wykonywania w\u0142a\u015bcicielowi pliku, grupie i pozosta\u0142ym u\u017cytkownikom. Odpowiednik zapisu a+x. o-rw Odbiera uprawnienia do odczytu i zapisu wszystkim poza w\u0142a\u015bcicielem i grup\u0105. go=rw Nadaje uprawnienia do odczytu i zapisu grupie i wszystkim innym poza w\u0142a\u015bcicielem pliku. Je\u015bli grupa i pozostali u\u017cytkownicy posiadali wcze\u015bniej uprawnienia do wykonywania, uprawnienia te zostan\u0105 im odebrane. u+x,go=rx Nadaje uprawnienia do wykonywania w\u0142a\u015bcicielowi pliku oraz nadaje grupie i pozosta\u0142ym u\u017cytkownikom prawa do odczytu i wykonywania. Kilka kombinacji uprawnie\u0144 mo\u017cna oddzieli\u0107 od siebie przecinki","title":"chmod zmiana trybu pliku"},{"location":"Linux_Uprawnienia/chmod_zmiana_trybu_pliku/#chmod-zmiana-trybu-pliku","text":"Aby zmieni\u0107 tryb (uprawnienia) pliku lub katalogu, korzystamy z polecenia chmod. Nale\u017cy zapami\u0119ta\u0107, \u017ce tryb pliku lub katalogu mo\u017ce zmieni\u0107 tylko w\u0142a\u015bciciel pliku lub u\u017cytkownik uprzywilejowany. Polecenie chmod umo\u017cliwia zdefiniowanie trybu na dwa sposoby. Poprzez reprezentacj\u0119 \u00f3semkow\u0105. Poprzez reprezentacj\u0119 symboliczn\u0105. Najpierw om\u00f3wimy reprezentacj\u0119 \u00f3semkow\u0105. W notacji \u00f3semkowej do okre\u015blenia wzorca po\u017c\u0105danych uprawnie\u0144 wykorzystujemy liczby w systemie \u00f3semkowym. Poniewa\u017c w systemie \u00f3semkowym ka\u017cda cyfra reprezentuje trzy cyfry binarne, mo\u017cna j\u0105 \u0142atwo zmapowa\u0107 na schemat wykorzystywany do przechowywania trybu pliku. W tabeli 9.4 pokazano, co to oznacza. Tabela 9.4. Tryby plik\u00f3w w reprezentacji binarnej i \u00f3semkowej Reprezentacja \u00f3semkowa Reprezentacja binarna Tryb pliku 0 000 --- 1 001 --x 2 010 -w- 3 011 -wx 4 100 r-- 5 101 r-x 6 110 rw- 7 111 rwx CZYM U LICHA JEST SYSTEM \u00d3SEMKOWY? System \u00f3semkowy (o podstawie 8) oraz jego kuzyn, czyli system szesnastkowy (o podstawie 16), s\u0105 systemami liczbowymi cz\u0119sto wykorzystywanymi do wyra\u017cania liczb w informatyce. My, ludzie, liczymy w systemie opartym na liczbie 10, co wynika z faktu posiadania przez nas 10 palc\u00f3w (a przynajmniej przez wi\u0119kszo\u015b\u0107 z nas). Natomiast komputery zosta\u0142y wyposa\u017cone tylko w jeden palec i dlatego mog\u0105 wykonywa\u0107 obliczenia w systemie binarnym (o podstawie 2). Ich system liczbowy operuje tylko na dw\u00f3ch cyfrach: zero i jeden. To dlatego liczenie w systemie binarnym wygl\u0105da nast\u0119puj\u0105co: 0, 1, 10, 11, 100, 101, 110, 111, 1000, 1001, 1010, 1011 W systemie \u00f3semkowym liczymy z wykorzystaniem cyfr od zera do siedmiu, czyli: 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21\u2026 W systemie szesnastkowym korzystamy z cyfr od zera do dziewi\u0119ciu oraz dodatkowo z liter od A do F: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F, 10, 11, 12, 13\u2026 Chocia\u017c z \u0142atwo\u015bci\u0105 dostrze\u017cemy sens stosowania systemu dw\u00f3jkowego (komputery s\u0105 wyposa\u017cone tylko w jeden palec), to mo\u017cemy mie\u0107 w\u0105tpliwo\u015bci co do systemu \u00f3semkowego i szesnastkowego. Odpowied\u017a wi\u0105\u017ce si\u0119 z ludzk\u0105 wygod\u0105. Ma\u0142e porcje danych s\u0105 cz\u0119sto reprezentowane na komputerach jako wzorce bitowe. We\u017amy na przyk\u0142ad kolor RGB. W wi\u0119kszo\u015bci monitor\u00f3w ka\u017cdy piksel jest reprezentowany przez trzy komponenty koloru: 8 bit\u00f3w dla koloru czerwonego, 8 bit\u00f3w dla zielonego i 8 bit\u00f3w dla niebieskiego. Pi\u0119kny niebieski kolor zosta\u0142by zapisany w postaci 24-bitowej liczby: 010000110110111111001101 Czy ktokolwiek chcia\u0142by przez ca\u0142y dzie\u0144 odczytywa\u0107 i zapisywa\u0107 takie liczby? Nie s\u0105dz\u0119. Tutaj pojawia si\u0119 potrzeba wykorzystania innego systemu numerycznego. Ka\u017cda cyfra w liczbie szesnastkowej reprezentuje cztery cyfry binarne. Dzi\u0119ki temu zapis naszego 24-bitowego koloru niebieskiego mo\u017cna skr\u00f3ci\u0107 do 6-cyfrowej liczby szesnastkowej: 436FCD. Poniewa\u017c cyfry w liczbie szesnastkowej odpowiadaj\u0105 bitom w liczbie binarnej, mo\u017cemy zauwa\u017cy\u0107, \u017ce czerwony komponent naszego koloru jest reprezentowany przez liczb\u0119 43, zielony przez 6F, a niebieski przez CD. Obecnie zapis szesnastkowy (zwykle okre\u015blany jako hex) jest cz\u0119\u015bciej stosowany ni\u017c \u00f3semkowy, jednak mo\u017cliwo\u015b\u0107 zapisu trzech bit\u00f3w liczby dw\u00f3jkowej w systemie \u00f3semkowym jest bardzo przydatna, o czym przekonamy si\u0119 niebawem. Za pomoc\u0105 trzech cyfr w systemie \u00f3semkowym mo\u017cemy ustawi\u0107 tryb pliku dla w\u0142a\u015bciciela, dla grupy, do kt\u00f3rej przypisany jest plik, i dla pozosta\u0142ych u\u017cytkownik\u00f3w. [me@linuxbox ~]$ > foo.txt [me@linuxbox ~]$ ls -l foo.txt -rw-rw-r-- 1 me me 0 2018-03-06 14:52 foo.txt [me@linuxbox ~]$ chmod 600 foo.txt [me@linuxbox ~]$ ls -l foo.txt -rw------- 1 me me 0 2018-03-06 14:52 foo.txt Przekazuj\u0105c argument 600, mogli\u015bmy ustawi\u0107 uprawnienia w\u0142a\u015bciciela do odczytu i zapisu oraz usun\u0105\u0107 uprawnienia grupy i pozosta\u0142ych u\u017cytkownik\u00f3w. Chocia\u017c zapami\u0119tanie mapowania mi\u0119dzy reprezentacj\u0105 \u00f3semkow\u0105 a binarn\u0105 mo\u017ce si\u0119 wydawa\u0107 pewn\u0105 niedogodno\u015bci\u0105, jednak w praktyce cz\u0119sto stosuje si\u0119 tylko kilka przypadk\u00f3w: 7 (rwx), 6 (rw-), 5 (r-x), 4 (r--) i 0 (---). chmod pozwala te\u017c na ustawienie trybu plik\u00f3w za pomoc\u0105 zapisu symbolicznego. Zapis symboliczny sk\u0142ada si\u0119 z trzech cz\u0119\u015bci. U\u017cytkownik, kt\u00f3rego dotyczy zmiana. Operacja, kt\u00f3ra zostanie wykonana. Uprawnienia, kt\u00f3re zostan\u0105 ustawione Aby okre\u015bli\u0107, kogo dotyczy zmiana, korzystamy z kombinacji znak\u00f3w u, g, o i a zgodnie z opisem w tabeli 9.5. Tabela 9.5. Zapis symboliczny polecenia chmod Symbol Znaczenie u Skr\u00f3t od ang. s\u0142owa user (\u201eu\u017cytkownik\u201d); oznacza w\u0142a\u015bciciela pliku lub katalogu. g Grupa. o Skr\u00f3t od ang. s\u0142owa other (\u201epozostali\u201d); oznacza wszystkich pozosta\u0142ych u\u017cytkownik\u00f3w. a Skr\u00f3t od ang. s\u0142owa all (\u201ewszyscy\u201d); obejmuje wszystkich u\u017cytkownik\u00f3w okre\u015blanych przez symbole u, g i o. Je\u015bli nie zdefiniujemy \u017cadnego znaku, domy\u015blnie zostanie u\u017cyta opcja all. Operacja mo\u017ce mie\u0107 posta\u0107 a+, co oznacza dodanie uprawnienia, a-, co oznacza odebranie uprawnienia, lub a=, co oznacza, \u017ce przypisane zostan\u0105 tylko niekt\u00f3re uprawnienia, a wszystkie pozosta\u0142e zostan\u0105 odebrane. Uprawnienia s\u0105 okre\u015blane z wykorzystaniem znak\u00f3w r, w oraz x. W tabeli 9.6 przedstawiono kilka przyk\u0142ad\u00f3w zapisu symbolicznego. Niekt\u00f3rzy wol\u0105 korzysta\u0107 z zapisu \u00f3semkowego; inni ceni\u0105 sobie zapis symboliczny. Zapis symboliczny ma t\u0119 przewag\u0119, \u017ce pozwala na ustawienie jednego atrybutu bez wp\u0142ywu na pozosta\u0142e. Na stronie podr\u0119cznika man polecenia chmod znajdziemy wi\u0119cej szczeg\u00f3\u0142\u00f3w oraz list\u0119 opcji. Uwa\u017cajmy na opcj\u0119 --recursive. Opcja ta sprawia, \u017ce polecenie zostanie wykonane zar\u00f3wno na plikach, jak i na katalogach. To dlatego nie jest tak przydatna, jak mog\u0142oby si\u0119 wydawa\u0107, poniewa\u017c rzadko chcemy, aby pliki i katalogi posiada\u0142y te same ustawienia uprawnie\u0144. Tabela 9.6. Przyk\u0142ady zapisu symbolicznego polecenia chmod Zapis Znaczenie u+x Nadaje w\u0142a\u015bcicielowi pliku uprawnienia do wykonywania. u-x Odbiera w\u0142a\u015bcicielowi pliku uprawnienia do wykonywania. +x Nadaje uprawnienia do wykonywania w\u0142a\u015bcicielowi pliku, grupie i pozosta\u0142ym u\u017cytkownikom. Odpowiednik zapisu a+x. o-rw Odbiera uprawnienia do odczytu i zapisu wszystkim poza w\u0142a\u015bcicielem i grup\u0105. go=rw Nadaje uprawnienia do odczytu i zapisu grupie i wszystkim innym poza w\u0142a\u015bcicielem pliku. Je\u015bli grupa i pozostali u\u017cytkownicy posiadali wcze\u015bniej uprawnienia do wykonywania, uprawnienia te zostan\u0105 im odebrane. u+x,go=rx Nadaje uprawnienia do wykonywania w\u0142a\u015bcicielowi pliku oraz nadaje grupie i pozosta\u0142ym u\u017cytkownikom prawa do odczytu i wykonywania. Kilka kombinacji uprawnie\u0144 mo\u017cna oddzieli\u0107 od siebie przecinki","title":"chmod \u2014 zmiana trybu pliku"},{"location":"TMUX/Polecenia/","text":"Polecenia multiplexera terminali tmux Skr\u00f3ty przydatne do pracy z panelami Polecenie Akcja tmux Uruchamia okno terminala tmux tmux new -t new-project Uruchamia okno terminala tmux z nazw\u0105 projektu new-project tmux list-sessions Listuje sesje tmuxa tmux attach -t nazwa_sesji Pod\u0142\u0105cza nas do sesji. Zamiast nazwa_sesji mo\u017cna poda\u0107 jej numer co b\u0119dzie szybsze. Zamiast attach mo\u017cna u\u017cy\u0107 skr\u00f3tu a tmux ls Listuje wszystkie aktywne sesje tmuxa tmux rename-session -t a b Zmienia naz\u0119 sesji z a na b z poziomu konsoli g\u0142\u00f3wnej tmux new -s nazwasesji Tworzy now\u0105 sesj\u0119 z podan\u0105 nazw\u0105 tmux kill-session -t sessionname Zamyka sesj\u0119 Ctrl + b Domy\u015blny skr\u00f3t dla prefixu Crtl + d Zamyka aktywn\u0105 sesj\u0119 Prefix + ? Pokazuje wszystkie skr\u00f3ty tmuxa Prefix + d Od\u0142\u0105cza od aktywnej sesji tmux bez jej zamykania Prefix + % Tworzy nowy panel w oknie obok Prefix + \" Tworzy nowy panel w oknie poni\u017cej Prefix + o Prze\u0142\u0105cza mi\u0119dzy sesjami Prefix + Spacja Prze\u0142\u0105cza layout z horyzontalnego na vertykalny i odwrotnie Prefix + x z potwierdzeniem y Zamyka panel Prefix + kursor Prze\u0142\u0105cza panel Prefix + } Zamienia panele kolejno\u015bci\u0105 Prefix + { Zamienia panele kolejno\u015bci\u0105 Prefix + $ Zmienia nazw\u0119 sesji z numeru do dowolnej nazwy Prefix + s Listuje sesje tmuxa z poziomu aktywnej sesji. Fajne bo nie trzeba wychodzic z tmuxa \u017ceby prze\u0142\u0105czy\u0107 si\u0119 na inn\u0105 sesj\u0119 Prefix + z Zoomuje aktywn\u0105 sesj\u0119. Ponowne u\u017cycie tej kombinacji przywraca pozosta\u0142e sesje Skr\u00f3ty przydatne do pracy z oknami Polecenie Akcja Prefix + c Uruchamia nowe okno w bie\u017c\u0105cym projekcie tmux Prefix + p Prze\u0142\u0105cza na poprzednie okno Prefix + n Prze\u0142\u0105cza na nast\u0119pne okno Prefix + & z potwierdzeniem y Zamyka bie\u017c\u0105ce okno Prefix + , Zmienia nazw\u0119 aktywnego okna Prefix + w Listuje wszystkie okna i pozwala si\u0119 mi\u0119dzy nimi przemieszcza\u0107 kursorami Prefix + f Pozwala wyszuka\u0107 okno po nazwie Edycja pliku konfiguracyjnego Mo\u017cemy zmieni\u0107 defaultowe ustawienia tmuxa edytuj\u0105c plik ~/.tmux.conf Zmiana defaultowego prefixu na Ctrl+a # Rebind prefix key unbind C-b set-option -g prefix C-a bind-key C-a send-refix Zmiana kolor\u00f3w # Pretty colors set -g status-bg blue set -g status-fg white Prze\u0142adowanie pliku konfiguracyjnego # Easy reloading bind R source-file ~/.tmux.conf Sprawdzanie defaultowych przypisa\u0144 man tmux /bind Kopiowanie w tmux Aby skopiowac dany tekst nale\u017cy w\u0142\u0105czy\u0107 tryb kopiowania u\u017cywaj\u0105c Prefix + [ Pozwala to prze\u0142\u0105cza\u0107 si\u0119 mi\u0119dzy liniami w pliku kursorami. By wyj\u015b\u0107 z trybu skrolowania wytarczy wcisn\u0105\u0107 q bez prefixu. Zaznaczamy pocz\u0105tek tekstu kt\u00f3ry chcemy skopiowa\u0107 i wciskamy Ctrl + Space i kursorami przesuwamy tekst kt\u00f3ry b\u0119dzie si\u0119 zaznacza\u0142. kiedy ju\u017c mamy zanznaczony tekst wciskamy Ctrl + w Spowoduje to wyj\u015bcie z trybu kopiowania. Wklejamy wciskaj\u0105c Prefix + ] W\u0142\u0105czanie trybu myszy Mo\u017cemy nawigowa\u0107 u\u017cywaj\u0105c myszki. Buy to zrobi\u0107 nale\u017cy wybra\u0107 Prefix + : i wyda\u0107 komend\u0119 :set mouse on By wy\u0142\u0105czy\u0107 tryb myszy: :set mouse off Udost\u0119pnianie sesji U\u017cywaj\u0105c tmux i \u0142\u0105cz\u0105c si\u0119 z t\u0105 sam\u0105 sesj\u0105 z wielu maszyn zdalnych mo\u017cemy wsp\u00f3\u0142dzieli\u0107 dan\u0105 sesj\u0119 z wieloma u\u017cytkownikami w tym samym czasie tworz\u0105c tzw. \"zdalny pulpit\". U\u017cytkownicty pdpi\u0119ci do tej samej sesji w tym samym czasie mog\u0105 pracowa\u0107 jednocze\u015bnie. Podobnie mo\u017cna \u0142\u0105czy\u0107 si\u0119 z sesj\u0105 tmux a zniej \u0142\u0105czy\u0107 przez ssh z maszyn\u0105 kt\u00f3ra nie ma tmuxa tak by robi\u0107 np troubleshooting na maszynie, np na ESXie czy na vCenter. Wsp\u00f3\u0142dzielenie historii mi\u0119dzy sesjami By default historia mi\u0119dzy sesjami tmux nie jest wsp\u00f3\u0142dzielona. Oznacza to \u017ce komenda wpisana w jednej sesji nie jest widoczna w historii drugiej sesji. Mo\u017cna to zmieni\u0107w nast\u0119puj\u0105cy spos\u00f3b. Edytujemy plik: vim ~/.bashrc A wnim dodajemy nast\u0119puj\u0105ce wpisy: shopt -s histappend shopt -s histreedit shopt -s histverify HISTCONTROL='ignoreboth' PROMPT_COMMAND=\"history -a;history -c;history -r; $PROMPT_COMMAND\" Zapisujemy zmiany i wydajemy komende source ~/.bashrc Je\u017celi u\u017cywamy zsh to najpierw musimy uruchomi\u0107 basha exec bash Wykona\u0107 powy\u017csze polecenia a potem exec zsh","title":"Podstawy tmux"},{"location":"TMUX/Polecenia/#polecenia-multiplexera-terminali-tmux","text":"","title":"Polecenia multiplexera terminali tmux"},{"location":"TMUX/Polecenia/#skroty-przydatne-do-pracy-z-panelami","text":"Polecenie Akcja tmux Uruchamia okno terminala tmux tmux new -t new-project Uruchamia okno terminala tmux z nazw\u0105 projektu new-project tmux list-sessions Listuje sesje tmuxa tmux attach -t nazwa_sesji Pod\u0142\u0105cza nas do sesji. Zamiast nazwa_sesji mo\u017cna poda\u0107 jej numer co b\u0119dzie szybsze. Zamiast attach mo\u017cna u\u017cy\u0107 skr\u00f3tu a tmux ls Listuje wszystkie aktywne sesje tmuxa tmux rename-session -t a b Zmienia naz\u0119 sesji z a na b z poziomu konsoli g\u0142\u00f3wnej tmux new -s nazwasesji Tworzy now\u0105 sesj\u0119 z podan\u0105 nazw\u0105 tmux kill-session -t sessionname Zamyka sesj\u0119 Ctrl + b Domy\u015blny skr\u00f3t dla prefixu Crtl + d Zamyka aktywn\u0105 sesj\u0119 Prefix + ? Pokazuje wszystkie skr\u00f3ty tmuxa Prefix + d Od\u0142\u0105cza od aktywnej sesji tmux bez jej zamykania Prefix + % Tworzy nowy panel w oknie obok Prefix + \" Tworzy nowy panel w oknie poni\u017cej Prefix + o Prze\u0142\u0105cza mi\u0119dzy sesjami Prefix + Spacja Prze\u0142\u0105cza layout z horyzontalnego na vertykalny i odwrotnie Prefix + x z potwierdzeniem y Zamyka panel Prefix + kursor Prze\u0142\u0105cza panel Prefix + } Zamienia panele kolejno\u015bci\u0105 Prefix + { Zamienia panele kolejno\u015bci\u0105 Prefix + $ Zmienia nazw\u0119 sesji z numeru do dowolnej nazwy Prefix + s Listuje sesje tmuxa z poziomu aktywnej sesji. Fajne bo nie trzeba wychodzic z tmuxa \u017ceby prze\u0142\u0105czy\u0107 si\u0119 na inn\u0105 sesj\u0119 Prefix + z Zoomuje aktywn\u0105 sesj\u0119. Ponowne u\u017cycie tej kombinacji przywraca pozosta\u0142e sesje","title":"Skr\u00f3ty przydatne do pracy z panelami"},{"location":"TMUX/Polecenia/#skroty-przydatne-do-pracy-z-oknami","text":"Polecenie Akcja Prefix + c Uruchamia nowe okno w bie\u017c\u0105cym projekcie tmux Prefix + p Prze\u0142\u0105cza na poprzednie okno Prefix + n Prze\u0142\u0105cza na nast\u0119pne okno Prefix + & z potwierdzeniem y Zamyka bie\u017c\u0105ce okno Prefix + , Zmienia nazw\u0119 aktywnego okna Prefix + w Listuje wszystkie okna i pozwala si\u0119 mi\u0119dzy nimi przemieszcza\u0107 kursorami Prefix + f Pozwala wyszuka\u0107 okno po nazwie","title":"Skr\u00f3ty przydatne do pracy z oknami"},{"location":"TMUX/Polecenia/#edycja-pliku-konfiguracyjnego","text":"Mo\u017cemy zmieni\u0107 defaultowe ustawienia tmuxa edytuj\u0105c plik ~/.tmux.conf","title":"Edycja pliku konfiguracyjnego"},{"location":"TMUX/Polecenia/#zmiana-defaultowego-prefixu-na-ctrla","text":"# Rebind prefix key unbind C-b set-option -g prefix C-a bind-key C-a send-refix","title":"Zmiana defaultowego prefixu na Ctrl+a"},{"location":"TMUX/Polecenia/#zmiana-kolorow","text":"# Pretty colors set -g status-bg blue set -g status-fg white","title":"Zmiana kolor\u00f3w"},{"location":"TMUX/Polecenia/#przeadowanie-pliku-konfiguracyjnego","text":"# Easy reloading bind R source-file ~/.tmux.conf","title":"Prze\u0142adowanie pliku konfiguracyjnego"},{"location":"TMUX/Polecenia/#sprawdzanie-defaultowych-przypisan","text":"man tmux /bind","title":"Sprawdzanie defaultowych przypisa\u0144"},{"location":"TMUX/Polecenia/#kopiowanie-w-tmux","text":"Aby skopiowac dany tekst nale\u017cy w\u0142\u0105czy\u0107 tryb kopiowania u\u017cywaj\u0105c Prefix + [ Pozwala to prze\u0142\u0105cza\u0107 si\u0119 mi\u0119dzy liniami w pliku kursorami. By wyj\u015b\u0107 z trybu skrolowania wytarczy wcisn\u0105\u0107 q bez prefixu. Zaznaczamy pocz\u0105tek tekstu kt\u00f3ry chcemy skopiowa\u0107 i wciskamy Ctrl + Space i kursorami przesuwamy tekst kt\u00f3ry b\u0119dzie si\u0119 zaznacza\u0142. kiedy ju\u017c mamy zanznaczony tekst wciskamy Ctrl + w Spowoduje to wyj\u015bcie z trybu kopiowania. Wklejamy wciskaj\u0105c Prefix + ]","title":"Kopiowanie w tmux"},{"location":"TMUX/Polecenia/#waczanie-trybu-myszy","text":"Mo\u017cemy nawigowa\u0107 u\u017cywaj\u0105c myszki. Buy to zrobi\u0107 nale\u017cy wybra\u0107 Prefix + : i wyda\u0107 komend\u0119 :set mouse on By wy\u0142\u0105czy\u0107 tryb myszy: :set mouse off","title":"W\u0142\u0105czanie trybu myszy"},{"location":"TMUX/Polecenia/#udostepnianie-sesji","text":"U\u017cywaj\u0105c tmux i \u0142\u0105cz\u0105c si\u0119 z t\u0105 sam\u0105 sesj\u0105 z wielu maszyn zdalnych mo\u017cemy wsp\u00f3\u0142dzieli\u0107 dan\u0105 sesj\u0119 z wieloma u\u017cytkownikami w tym samym czasie tworz\u0105c tzw. \"zdalny pulpit\". U\u017cytkownicty pdpi\u0119ci do tej samej sesji w tym samym czasie mog\u0105 pracowa\u0107 jednocze\u015bnie. Podobnie mo\u017cna \u0142\u0105czy\u0107 si\u0119 z sesj\u0105 tmux a zniej \u0142\u0105czy\u0107 przez ssh z maszyn\u0105 kt\u00f3ra nie ma tmuxa tak by robi\u0107 np troubleshooting na maszynie, np na ESXie czy na vCenter.","title":"Udost\u0119pnianie sesji"},{"location":"TMUX/Polecenia/#wspodzielenie-historii-miedzy-sesjami","text":"By default historia mi\u0119dzy sesjami tmux nie jest wsp\u00f3\u0142dzielona. Oznacza to \u017ce komenda wpisana w jednej sesji nie jest widoczna w historii drugiej sesji. Mo\u017cna to zmieni\u0107w nast\u0119puj\u0105cy spos\u00f3b. Edytujemy plik: vim ~/.bashrc A wnim dodajemy nast\u0119puj\u0105ce wpisy: shopt -s histappend shopt -s histreedit shopt -s histverify HISTCONTROL='ignoreboth' PROMPT_COMMAND=\"history -a;history -c;history -r; $PROMPT_COMMAND\" Zapisujemy zmiany i wydajemy komende source ~/.bashrc Je\u017celi u\u017cywamy zsh to najpierw musimy uruchomi\u0107 basha exec bash Wykona\u0107 powy\u017csze polecenia a potem exec zsh","title":"Wsp\u00f3\u0142dzielenie historii mi\u0119dzy sesjami"},{"location":"TMUX/WindowsTerminal/","text":"Konfiguracja SSH pod Windows Terminal Aby logowa\u0107 si\u0119 kluczem publicznym bez podawania has\u0142a w Windows Terminal nale\u017cy wykona\u0107 nast\u0119puj\u0105ce polecenia: Generowanie klucza Przy generowaniu nale\u017cy podac passphrase >ssh-keygen Generating public/private rsa key pair. Enter file in which to save the key (C:\\Users\\dan/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in hanselpi4. Your public key has been saved in hanselpi4.pub. Kopiowanie klucza publicznego na zdalny serwer: type c:\\users\\dan\\.ssh\\id_rsa.pub | ssh pi@hanselpi4 'cat >> .ssh/authorized_keys' Konfiguracja Windows Terminala Dodajemy nowy profil \"backgroundImage\": \"D:\\\\Windows_Terminal\\\\Ubuntu\\\\ubuntu-logo32.png\", \"backgroundImageAlignment\": \"center\", \"backgroundImageOpacity\": 0.10000000000000001, \"backgroundImageStretchMode\": \"none\", \"colorScheme\": \"UbuntuLegit\", \"commandline\": \"ssh alex@hanselpi4\", \"experimental.retroTerminalEffect\": false, \"font\": { \"face\": \"JetBrains Mono\", \"size\": 10 }, \"guid\": \"{3b6e258c-bd69-43af-9365-69b153b0ece6}\", \"icon\": \"D:\\\\Windows_Terminal\\\\Ubuntu\\\\ubuntu-logo32.png\", \"name\": \"SSH pi@hanselpi4 \\ud83d\\udcbb\", \"opacity\": 100, \"startingDirectory\": \"%USERPROFILE%\", \"suppressApplicationTitle\": false, \"tabTitle\": \"hanselpi4\", \"useAcrylic\": true Us\u0142uga OpenSSH Authentication Agent Sprawdzamy w serwisach na maszynie Windowsowej czy us\u0142uga OpenSSH Authentication Agent jest w\u0142\u0105czona. Je\u017celi nie jest to j\u0105 w\u0142\u0105czamy Dodanie klucza prywatnego do agenta SSH: Nast\u0119pnie musimy doda\u0107 klucz prywatny do OpenSSH Authentication Agenta ssh-add $HOME/.ssh/your_file_name Po wykonaniu powy\u017cszych powinni\u015bmy m\u00f3czalogowa\u0107 si\u0119 do naszego systemu bez u\u017cycia has\u0142a.","title":"Windows Terminal SSH"},{"location":"TMUX/WindowsTerminal/#konfiguracja-ssh-pod-windows-terminal","text":"Aby logowa\u0107 si\u0119 kluczem publicznym bez podawania has\u0142a w Windows Terminal nale\u017cy wykona\u0107 nast\u0119puj\u0105ce polecenia:","title":"Konfiguracja SSH pod Windows Terminal"},{"location":"TMUX/WindowsTerminal/#generowanie-klucza","text":"Przy generowaniu nale\u017cy podac passphrase >ssh-keygen Generating public/private rsa key pair. Enter file in which to save the key (C:\\Users\\dan/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in hanselpi4. Your public key has been saved in hanselpi4.pub.","title":"Generowanie klucza"},{"location":"TMUX/WindowsTerminal/#kopiowanie-klucza-publicznego-na-zdalny-serwer","text":"type c:\\users\\dan\\.ssh\\id_rsa.pub | ssh pi@hanselpi4 'cat >> .ssh/authorized_keys'","title":"Kopiowanie klucza publicznego na zdalny serwer:"},{"location":"TMUX/WindowsTerminal/#konfiguracja-windows-terminala","text":"Dodajemy nowy profil \"backgroundImage\": \"D:\\\\Windows_Terminal\\\\Ubuntu\\\\ubuntu-logo32.png\", \"backgroundImageAlignment\": \"center\", \"backgroundImageOpacity\": 0.10000000000000001, \"backgroundImageStretchMode\": \"none\", \"colorScheme\": \"UbuntuLegit\", \"commandline\": \"ssh alex@hanselpi4\", \"experimental.retroTerminalEffect\": false, \"font\": { \"face\": \"JetBrains Mono\", \"size\": 10 }, \"guid\": \"{3b6e258c-bd69-43af-9365-69b153b0ece6}\", \"icon\": \"D:\\\\Windows_Terminal\\\\Ubuntu\\\\ubuntu-logo32.png\", \"name\": \"SSH pi@hanselpi4 \\ud83d\\udcbb\", \"opacity\": 100, \"startingDirectory\": \"%USERPROFILE%\", \"suppressApplicationTitle\": false, \"tabTitle\": \"hanselpi4\", \"useAcrylic\": true","title":"Konfiguracja Windows Terminala"},{"location":"TMUX/WindowsTerminal/#usuga-openssh-authentication-agent","text":"Sprawdzamy w serwisach na maszynie Windowsowej czy us\u0142uga OpenSSH Authentication Agent jest w\u0142\u0105czona. Je\u017celi nie jest to j\u0105 w\u0142\u0105czamy","title":"Us\u0142uga OpenSSH Authentication Agent"},{"location":"TMUX/WindowsTerminal/#dodanie-klucza-prywatnego-do-agenta-ssh","text":"Nast\u0119pnie musimy doda\u0107 klucz prywatny do OpenSSH Authentication Agenta ssh-add $HOME/.ssh/your_file_name Po wykonaniu powy\u017cszych powinni\u015bmy m\u00f3czalogowa\u0107 si\u0119 do naszego systemu bez u\u017cycia has\u0142a.","title":"Dodanie klucza prywatnego do agenta SSH:"},{"location":"VIM/Edycja_wielu_plik%C3%B3w/","text":"Edycja wielu plik\u00f3w Cz\u0119sto chcemy edytowa\u0107 kilka plik\u00f3w jednocze\u015bnie. Mo\u017ce si\u0119 pojawi\u0107 konieczno\u015b\u0107 dokonania zmian w kilku plikach lub skopiowania tre\u015bci jednego pliku do drugiego. W programie vi mo\u017cemy otworzy\u0107 do edycji kilka plik\u00f3w, podaj\u0105c w wierszu polece\u0144 ich nazwy: vi plik1 plik2 plik3... Wyjd\u017amy z bie\u017c\u0105cej sesji vi, aby utworzy\u0107 nowy plik do edycji. Najpierw wpiszmy :wq , aby zamkn\u0105\u0107 vi i zapisa\u0107 zmiany w tek\u015bcie. Nast\u0119pnie utw\u00f3rzmy w katalogu domowym dodatkowy plik, kt\u00f3ry pos\u0142u\u017cy nam do \u0107wicze\u0144. Nowy plik utworzymy, przechwytuj\u0105c wynik z polecenia ls: [me@linuxbox ~]$ ls -l /usr/bin > ls-output.txt Dokonajmy zmian w starym i nowym pliku, korzystaj\u0105c z vi: [me@linuxbox ~]$ vi foo.txt ls-output.txt Uruchomimy w ten spos\u00f3b vi; na ekranie pojawi si\u0119 tre\u015b\u0107 pierwszego pliku: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5 Prze\u0142\u0105czanie mi\u0119dzy plikami Aby prze\u0142\u0105czy\u0107 si\u0119 mi\u0119dzy jednym plikiem a drugim, korzystamy z nast\u0119puj\u0105cego polecenia ex: :bn Aby powr\u00f3ci\u0107 do poprzedniego pliku, korzystamy z polecenia: :bp Chocia\u017c mo\u017cemy prze\u0142\u0105cza\u0107 si\u0119 mi\u0119dzy plikami, vi przestrzega zasady zapobiegaj\u0105cej prze\u0142\u0105czaniu, je\u015bli nie zapisali\u015bmy zmian w bie\u017c\u0105cym pliku. Aby wymusi\u0107 na vi prze\u0142\u0105czenie pliku i porzucenie zmian, nale\u017cy doda\u0107 na ko\u0144cu polecenia wykrzyknik (!). Opr\u00f3cz opisanej powy\u017cej metody prze\u0142\u0105czania si\u0119 mi\u0119dzy plikami vim (i niekt\u00f3re wersje vi) udost\u0119pnia polecenia ex u\u0142atwiaj\u0105ce zarz\u0105dzanie kilkoma plikami. Korzystaj\u0105c z polecenia :buffers, mo\u017cemy wy\u015bwietli\u0107 list\u0119 edytowanych plik\u00f3w. Lista plik\u00f3w zostanie wy\u015bwietlona w dolnej cz\u0119\u015bci ekranu: :buffers 1 %a \"foo.txt\" line 1 2 \"ls-output.txt\" line 0 Press ENTER or type command to continue Aby prze\u0142\u0105czy\u0107 si\u0119 do innego bufora (pliku), nale\u017cy wpisa\u0107 :buffer wraz z numerem bufora, kt\u00f3ry chcemy edytowa\u0107. Aby na przyk\u0142ad prze\u0142\u0105czy\u0107 si\u0119 z bufora 1., zawieraj\u0105cego plik foo.txt, do bufora 2., kt\u00f3ry zawiera plik ls-output.txt, nale\u017cy wpisa\u0107 polecenie: :buffer 2 a na ekranie pojawi si\u0119 zawarto\u015b\u0107 drugiego pliku. Bufory mo\u017cna te\u017c zmienia\u0107 wspomnianymi wcze\u015bniej poleceniami :bn (skr\u00f3t od s\u0142\u00f3w buffer next) oraz :bp (skr\u00f3t od buffer previous). Otwieranie do edycji dodatkowych plik\u00f3w Mo\u017cemy te\u017c doda\u0107 kolejne pliki do bie\u017c\u0105cej sesji edycji. Polecenie ex :e (skr\u00f3t od ang. s\u0142owa edit \u2014 \u201eedycja\u201d), po kt\u00f3rym nast\u0119puje nazwa pliku, otworzy dodatkowy plik. Zako\u0144czmy bie\u017c\u0105c\u0105 sesj\u0119 edycji i powr\u00f3\u0107my do wiersza polece\u0144. Uruchomimy teraz vi ponownie, otwieraj\u0105c tylko jeden plik: [me@linuxbox ~]$ vi foo.txt Aby doda\u0107 drugi plik, wpiszmy: :e ls-output.txt Plik powinien si\u0119 pojawi\u0107 na ekranie. Mo\u017cemy te\u017c sprawdzi\u0107, czy pierwszy plik jest nadal dost\u0119pny: :buffers 1 # \"foo.txt\" line 1 2 %a \"ls-output.txt\" line 0 Press ENTER or type command to continue Kopiowanie tre\u015bci z jednego pliku do drugiego Podczas edycji wielu plik\u00f3w cz\u0119sto chcemy skopiowa\u0107 fragment jednego edytowanego pliku do drugiego. Mo\u017cna tego z \u0142atwo\u015bci\u0105 dokona\u0107, korzystaj\u0105c z u\u017cywanych wcze\u015bniej zwyk\u0142ych polece\u0144 \u201ekopiuj\u201d i \u201ewklej\u201d. Mo\u017cemy to zademonstrowa\u0107 w opisany dalej spos\u00f3b. Najpierw prze\u0142\u0105czmy si\u0119 do bufora 1. (foo.txt), wpisuj\u0105c polecenie: :buffer 1 Na ekranie powinna si\u0119 pojawi\u0107 nast\u0119puj\u0105ca tre\u015b\u0107: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5 Nast\u0119pnie przenie\u015bmy kursor do pierwszego wiersza i wpiszmy yy , aby go skopiowa\u0107. Prze\u0142\u0105czmy si\u0119 do drugiego bufora, wpisuj\u0105c: :buffer 2 Ekran b\u0119dzie teraz przedstawia\u0142 list\u0119 plik\u00f3w podobn\u0105 do poni\u017cszej (tutaj widoczny jest tylko fragment): total 343700 -rwxr-xr-x 1 root root 31316 2017-12-05 08:58 [ -rwxr-xr-x 1 root root 8240 2017-12-09 13:39 411toppm -rwxr-xr-x 1 root root 111276 2018-01-31 13:36 a2p -rwxr-xr-x 1 root root 25368 2016-10-06 20:16 a52dec -rwxr-xr-x 1 root root 11532 2017-05-04 17:43 aafire -rwxr-xr-x 1 root root 7292 2017-05-04 17:43 aainfo Umie\u015b\u0107my kursor w pierwszym wierszu i wpiszmy polecenie p , aby wklei\u0107 wiersz skopiowany w poprzednim pliku: total 343700 Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. -rwxr-xr-x 1 root root 31316 2017-12-05 08:58 [ -rwxr-xr-x 1 root root 8240 2017-12-09 13:39 411toppm -rwxr-xr-x 1 root root 111276 2018-01-31 13:36 a2p -rwxr-xr-x 1 root root 25368 2016-10-06 20:16 a52dec -rwxr-xr-x 1 root root 11532 2017-05-04 17:43 aafire -rwxr-xr-x 1 root root 7292 2017-05-04 17:43 aainfo Wstawianie tre\u015bci ca\u0142ego pliku do drugiego pliku Mamy r\u00f3wnie\u017c mo\u017cliwo\u015b\u0107 wstawienia tre\u015bci ca\u0142ego pliku do pliku, kt\u00f3ry edytujemy. Aby prze\u0107wiczy\u0107 t\u0119 metod\u0119, zako\u0144czmy nasz\u0105 sesj\u0119 vi i zacznijmy now\u0105 sesj\u0119 z jednym plikiem: [me@linuxbox ~]$ vi ls-output.txt Na ekranie ponownie zobaczymy list\u0119 plik\u00f3w: total 343700 -rwxr-xr-x 1 root root 31316 2017-12-05 08:58 [ -rwxr-xr-x 1 root root 8240 2017-12-09 13:39 411toppm -rwxr-xr-x 1 root root 111276 2018-01-31 13:36 a2p -rwxr-xr-x 1 root root 25368 2016-10-06 20:16 a52dec -rwxr-xr-x 1 root root 11532 2017-05-04 17:43 aafire -rwxr-xr-x 1 root root 7292 2017-05-04 17:43 aainfo Umie\u015b\u0107my kursor w trzecim wierszu i wpiszmy nast\u0119puj\u0105ce polecenie ex: :r foo.txt Polecenie :r (skr\u00f3t od ang. s\u0142owa read \u2014 \u201eczytaj\u201d) wstawia tre\u015b\u0107 podanego pliku przed miejscem po\u0142o\u017cenia kursora. Na ekranie powinna si\u0119 pojawi\u0107 nast\u0119puj\u0105ca tre\u015b\u0107: total 343700 -rwxr-xr-x 1 root root 31316 2017-12-05 08:58 [ -rwxr-xr-x 1 root root 8240 2017-12-09 13:39 411toppm Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5 -rwxr-xr-x 1 root root 111276 2018-01-31 13:36 a2p -rwxr-xr-x 1 root root 25368 2016-10-06 20:16 a52dec -rwxr-xr-x 1 root root 11532 2017-05-04 17:43 aafire -rwxr-xr-x 1 root root 7292 2017-05-04 17:43 aainfo Zapisywanie zmian Podobnie jak w przypadku innych operacji w vi, istnieje kilka sposob\u00f3w zapisywania edytowanych plik\u00f3w. Wspomnieli\u015bmy ju\u017c o poleceniu ex :w, jednak do dyspozycji mamy kilka innych przydatnych polece\u0144. Je\u015bli wpiszemy w trybie polece\u0144 ZZ, zapiszemy bie\u017c\u0105cy plik i zamkniemy vi. Podobnie dzia\u0142a polecenie ex :wq, kt\u00f3re jest kombinacj\u0105 polecenia :w i :q i s\u0142u\u017cy do zapisania pliku i zamkni\u0119cia programu. Polecenie :w mo\u017cna te\u017c opcjonalnie uzupe\u0142ni\u0107 nazw\u0105 pliku. Uzyskamy wtedy efekt polecenia Zapisz jako. Je\u015bli na przyk\u0142ad edytujemy plik foo.txt i chcemy zapisa\u0107 jego drug\u0105 wersj\u0119 pod nazw\u0105 foo1.txt, powinni\u015bmy wpisa\u0107: :w foo1.txt UWAGA Polecenie to zapisze plik pod now\u0105 nazw\u0105, jednak nie zmieni nazwy bie\u017c\u0105cego edytowanego pliku. Je\u015bli b\u0119dziemy kontynuowa\u0107 edycj\u0119, nadal b\u0119dziemy modyfikowa\u0107 plik foo.txt, a nie foo1.txt.","title":"Edycja wielu plik\u00f3w"},{"location":"VIM/Edycja_wielu_plik%C3%B3w/#edycja-wielu-plikow","text":"Cz\u0119sto chcemy edytowa\u0107 kilka plik\u00f3w jednocze\u015bnie. Mo\u017ce si\u0119 pojawi\u0107 konieczno\u015b\u0107 dokonania zmian w kilku plikach lub skopiowania tre\u015bci jednego pliku do drugiego. W programie vi mo\u017cemy otworzy\u0107 do edycji kilka plik\u00f3w, podaj\u0105c w wierszu polece\u0144 ich nazwy: vi plik1 plik2 plik3... Wyjd\u017amy z bie\u017c\u0105cej sesji vi, aby utworzy\u0107 nowy plik do edycji. Najpierw wpiszmy :wq , aby zamkn\u0105\u0107 vi i zapisa\u0107 zmiany w tek\u015bcie. Nast\u0119pnie utw\u00f3rzmy w katalogu domowym dodatkowy plik, kt\u00f3ry pos\u0142u\u017cy nam do \u0107wicze\u0144. Nowy plik utworzymy, przechwytuj\u0105c wynik z polecenia ls: [me@linuxbox ~]$ ls -l /usr/bin > ls-output.txt Dokonajmy zmian w starym i nowym pliku, korzystaj\u0105c z vi: [me@linuxbox ~]$ vi foo.txt ls-output.txt Uruchomimy w ten spos\u00f3b vi; na ekranie pojawi si\u0119 tre\u015b\u0107 pierwszego pliku: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5","title":"Edycja wielu plik\u00f3w"},{"location":"VIM/Edycja_wielu_plik%C3%B3w/#przeaczanie-miedzy-plikami","text":"Aby prze\u0142\u0105czy\u0107 si\u0119 mi\u0119dzy jednym plikiem a drugim, korzystamy z nast\u0119puj\u0105cego polecenia ex: :bn Aby powr\u00f3ci\u0107 do poprzedniego pliku, korzystamy z polecenia: :bp Chocia\u017c mo\u017cemy prze\u0142\u0105cza\u0107 si\u0119 mi\u0119dzy plikami, vi przestrzega zasady zapobiegaj\u0105cej prze\u0142\u0105czaniu, je\u015bli nie zapisali\u015bmy zmian w bie\u017c\u0105cym pliku. Aby wymusi\u0107 na vi prze\u0142\u0105czenie pliku i porzucenie zmian, nale\u017cy doda\u0107 na ko\u0144cu polecenia wykrzyknik (!). Opr\u00f3cz opisanej powy\u017cej metody prze\u0142\u0105czania si\u0119 mi\u0119dzy plikami vim (i niekt\u00f3re wersje vi) udost\u0119pnia polecenia ex u\u0142atwiaj\u0105ce zarz\u0105dzanie kilkoma plikami. Korzystaj\u0105c z polecenia :buffers, mo\u017cemy wy\u015bwietli\u0107 list\u0119 edytowanych plik\u00f3w. Lista plik\u00f3w zostanie wy\u015bwietlona w dolnej cz\u0119\u015bci ekranu: :buffers 1 %a \"foo.txt\" line 1 2 \"ls-output.txt\" line 0 Press ENTER or type command to continue Aby prze\u0142\u0105czy\u0107 si\u0119 do innego bufora (pliku), nale\u017cy wpisa\u0107 :buffer wraz z numerem bufora, kt\u00f3ry chcemy edytowa\u0107. Aby na przyk\u0142ad prze\u0142\u0105czy\u0107 si\u0119 z bufora 1., zawieraj\u0105cego plik foo.txt, do bufora 2., kt\u00f3ry zawiera plik ls-output.txt, nale\u017cy wpisa\u0107 polecenie: :buffer 2 a na ekranie pojawi si\u0119 zawarto\u015b\u0107 drugiego pliku. Bufory mo\u017cna te\u017c zmienia\u0107 wspomnianymi wcze\u015bniej poleceniami :bn (skr\u00f3t od s\u0142\u00f3w buffer next) oraz :bp (skr\u00f3t od buffer previous).","title":"Prze\u0142\u0105czanie mi\u0119dzy plikami"},{"location":"VIM/Edycja_wielu_plik%C3%B3w/#otwieranie-do-edycji-dodatkowych-plikow","text":"Mo\u017cemy te\u017c doda\u0107 kolejne pliki do bie\u017c\u0105cej sesji edycji. Polecenie ex :e (skr\u00f3t od ang. s\u0142owa edit \u2014 \u201eedycja\u201d), po kt\u00f3rym nast\u0119puje nazwa pliku, otworzy dodatkowy plik. Zako\u0144czmy bie\u017c\u0105c\u0105 sesj\u0119 edycji i powr\u00f3\u0107my do wiersza polece\u0144. Uruchomimy teraz vi ponownie, otwieraj\u0105c tylko jeden plik: [me@linuxbox ~]$ vi foo.txt Aby doda\u0107 drugi plik, wpiszmy: :e ls-output.txt Plik powinien si\u0119 pojawi\u0107 na ekranie. Mo\u017cemy te\u017c sprawdzi\u0107, czy pierwszy plik jest nadal dost\u0119pny: :buffers 1 # \"foo.txt\" line 1 2 %a \"ls-output.txt\" line 0 Press ENTER or type command to continue","title":"Otwieranie do edycji dodatkowych plik\u00f3w"},{"location":"VIM/Edycja_wielu_plik%C3%B3w/#kopiowanie-tresci-z-jednego-pliku-do-drugiego","text":"Podczas edycji wielu plik\u00f3w cz\u0119sto chcemy skopiowa\u0107 fragment jednego edytowanego pliku do drugiego. Mo\u017cna tego z \u0142atwo\u015bci\u0105 dokona\u0107, korzystaj\u0105c z u\u017cywanych wcze\u015bniej zwyk\u0142ych polece\u0144 \u201ekopiuj\u201d i \u201ewklej\u201d. Mo\u017cemy to zademonstrowa\u0107 w opisany dalej spos\u00f3b. Najpierw prze\u0142\u0105czmy si\u0119 do bufora 1. (foo.txt), wpisuj\u0105c polecenie: :buffer 1 Na ekranie powinna si\u0119 pojawi\u0107 nast\u0119puj\u0105ca tre\u015b\u0107: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5 Nast\u0119pnie przenie\u015bmy kursor do pierwszego wiersza i wpiszmy yy , aby go skopiowa\u0107. Prze\u0142\u0105czmy si\u0119 do drugiego bufora, wpisuj\u0105c: :buffer 2 Ekran b\u0119dzie teraz przedstawia\u0142 list\u0119 plik\u00f3w podobn\u0105 do poni\u017cszej (tutaj widoczny jest tylko fragment): total 343700 -rwxr-xr-x 1 root root 31316 2017-12-05 08:58 [ -rwxr-xr-x 1 root root 8240 2017-12-09 13:39 411toppm -rwxr-xr-x 1 root root 111276 2018-01-31 13:36 a2p -rwxr-xr-x 1 root root 25368 2016-10-06 20:16 a52dec -rwxr-xr-x 1 root root 11532 2017-05-04 17:43 aafire -rwxr-xr-x 1 root root 7292 2017-05-04 17:43 aainfo Umie\u015b\u0107my kursor w pierwszym wierszu i wpiszmy polecenie p , aby wklei\u0107 wiersz skopiowany w poprzednim pliku: total 343700 Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. -rwxr-xr-x 1 root root 31316 2017-12-05 08:58 [ -rwxr-xr-x 1 root root 8240 2017-12-09 13:39 411toppm -rwxr-xr-x 1 root root 111276 2018-01-31 13:36 a2p -rwxr-xr-x 1 root root 25368 2016-10-06 20:16 a52dec -rwxr-xr-x 1 root root 11532 2017-05-04 17:43 aafire -rwxr-xr-x 1 root root 7292 2017-05-04 17:43 aainfo","title":"Kopiowanie tre\u015bci z jednego pliku do drugiego"},{"location":"VIM/Edycja_wielu_plik%C3%B3w/#wstawianie-tresci-caego-pliku-do-drugiego-pliku","text":"Mamy r\u00f3wnie\u017c mo\u017cliwo\u015b\u0107 wstawienia tre\u015bci ca\u0142ego pliku do pliku, kt\u00f3ry edytujemy. Aby prze\u0107wiczy\u0107 t\u0119 metod\u0119, zako\u0144czmy nasz\u0105 sesj\u0119 vi i zacznijmy now\u0105 sesj\u0119 z jednym plikiem: [me@linuxbox ~]$ vi ls-output.txt Na ekranie ponownie zobaczymy list\u0119 plik\u00f3w: total 343700 -rwxr-xr-x 1 root root 31316 2017-12-05 08:58 [ -rwxr-xr-x 1 root root 8240 2017-12-09 13:39 411toppm -rwxr-xr-x 1 root root 111276 2018-01-31 13:36 a2p -rwxr-xr-x 1 root root 25368 2016-10-06 20:16 a52dec -rwxr-xr-x 1 root root 11532 2017-05-04 17:43 aafire -rwxr-xr-x 1 root root 7292 2017-05-04 17:43 aainfo Umie\u015b\u0107my kursor w trzecim wierszu i wpiszmy nast\u0119puj\u0105ce polecenie ex: :r foo.txt Polecenie :r (skr\u00f3t od ang. s\u0142owa read \u2014 \u201eczytaj\u201d) wstawia tre\u015b\u0107 podanego pliku przed miejscem po\u0142o\u017cenia kursora. Na ekranie powinna si\u0119 pojawi\u0107 nast\u0119puj\u0105ca tre\u015b\u0107: total 343700 -rwxr-xr-x 1 root root 31316 2017-12-05 08:58 [ -rwxr-xr-x 1 root root 8240 2017-12-09 13:39 411toppm Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5 -rwxr-xr-x 1 root root 111276 2018-01-31 13:36 a2p -rwxr-xr-x 1 root root 25368 2016-10-06 20:16 a52dec -rwxr-xr-x 1 root root 11532 2017-05-04 17:43 aafire -rwxr-xr-x 1 root root 7292 2017-05-04 17:43 aainfo","title":"Wstawianie tre\u015bci ca\u0142ego pliku do drugiego pliku"},{"location":"VIM/Edycja_wielu_plik%C3%B3w/#zapisywanie-zmian","text":"Podobnie jak w przypadku innych operacji w vi, istnieje kilka sposob\u00f3w zapisywania edytowanych plik\u00f3w. Wspomnieli\u015bmy ju\u017c o poleceniu ex :w, jednak do dyspozycji mamy kilka innych przydatnych polece\u0144. Je\u015bli wpiszemy w trybie polece\u0144 ZZ, zapiszemy bie\u017c\u0105cy plik i zamkniemy vi. Podobnie dzia\u0142a polecenie ex :wq, kt\u00f3re jest kombinacj\u0105 polecenia :w i :q i s\u0142u\u017cy do zapisania pliku i zamkni\u0119cia programu. Polecenie :w mo\u017cna te\u017c opcjonalnie uzupe\u0142ni\u0107 nazw\u0105 pliku. Uzyskamy wtedy efekt polecenia Zapisz jako. Je\u015bli na przyk\u0142ad edytujemy plik foo.txt i chcemy zapisa\u0107 jego drug\u0105 wersj\u0119 pod nazw\u0105 foo1.txt, powinni\u015bmy wpisa\u0107: :w foo1.txt UWAGA Polecenie to zapisze plik pod now\u0105 nazw\u0105, jednak nie zmieni nazwy bie\u017c\u0105cego edytowanego pliku. Je\u015bli b\u0119dziemy kontynuowa\u0107 edycj\u0119, nadal b\u0119dziemy modyfikowa\u0107 plik foo.txt, a nie foo1.txt.","title":"Zapisywanie zmian"},{"location":"VIM/Podstawowa_Edycja/","text":"Podstawowa edycja Najcz\u0119\u015bciej podczas edycji wykonujemy kilka podstawowych operacji, takich jak wpisywanie tekstu, usuwanie tekstu oraz przenoszenie tekstu poprzez wycinanie i wklejanie. Oczywi\u015bcie vi pozwala na wykonanie wszystkich wymienionych operacji na sw\u00f3j w\u0142asny spos\u00f3b. W programie vi mo\u017cemy tak\u017ce w ograniczonym stopniu cofa\u0107 polecenia. Gdy naci\u015bniemy u w trybie polece\u0144, vi cofnie ostatni\u0105 dokonan\u0105 zmian\u0119. Mo\u017ce si\u0119 to przyda\u0107 podczas wypr\u00f3bowywania podstawowych polece\u0144 edycji. Dodawanie tekstu W trybie edycji programu vi mo\u017cemy dodawa\u0107 tekst na kilka sposob\u00f3w. Korzystali\u015bmy ju\u017c z polecenia i do wstawiania tekstu. Powr\u00f3\u0107my na chwil\u0119 do pliku foo.txt: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. Gdyby\u015bmy chcieli doda\u0107 nieco tekstu na ko\u0144cu tego zdania, okaza\u0142oby si\u0119, \u017ce polecenie i nam na to nie pozwoli, poniewa\u017c nie mo\u017cemy przenie\u015b\u0107 kursora poza koniec wiersza. W vi dost\u0119pne jest polecenie s\u0142u\u017c\u0105ce do dodawania tekstu. Jest to polecenie a. Je\u015bli umie\u015bcimy kursor na ko\u0144cu wiersza i naci\u015bniemy klawisz A, kursor przejdzie poza koniec wiersza, a vi wejdzie w tryb edycji. B\u0119dziemy ju\u017c mogli doda\u0107 nieco tekstu: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Pami\u0119tajmy o naci\u015bni\u0119ciu klawisza Esc, aby wyj\u015b\u0107 z trybu edycji. Poniewa\u017c niemal zawsze chcemy dodawa\u0107 tekst na ko\u0144cu wiersza, vi udost\u0119pnia skr\u00f3t s\u0142u\u017c\u0105cy do przeniesienia kursora na koniec bie\u017c\u0105cego wiersza i rozpocz\u0119cie dodawania tekstu. Jest to polecenie A. Wypr\u00f3bujmy je i dodajmy do naszego pliku kilka nowych wierszy. Najpierw przenie\u015bmy kursor na pocz\u0105tek wiersza, korzystaj\u0105c z polecenia 0 (zero). Nast\u0119pnie naci\u015bnijmy klawisz A i dodajmy nast\u0119puj\u0105ce wiersze: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5 Naci\u015bnijmy klawisz Esc, aby wyj\u015b\u0107 z trybu edycji. Jak wida\u0107, polecenie A jest wygodniejsze, poniewa\u017c przenosi kursor na koniec wiersza przed w\u0142\u0105czeniem trybu edycji. Otwieranie wiersza Innym sposobem wstawiania wiersza jest \u201eotwieranie\u201d wiersza. Mo\u017cemy wstawi\u0107 pusty wiersz pomi\u0119dzy dwa istniej\u0105ce wiersze i w\u0142\u0105czy\u0107 tryb edycji. Polecenie to ma dwie postacie, przedstawione w tabeli 12.2. Tabela 12.2. Klawisze s\u0142u\u017c\u0105ce do otwierania wiersza Polecenie Otwiera o wiersz poni\u017cej bie\u017c\u0105cego wiersza O wiersz powy\u017cej bie\u017c\u0105cego wiersza Mo\u017cemy to zademonstrowa\u0107 w nast\u0119puj\u0105cy spos\u00f3b \u2014 umie\u015b\u0107my kursor w wierszu 3. i naci\u015bnijmy klawisz o. Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5 Poni\u017cej trzeciego wiersza zosta\u0142 wstawiony nowy wiersz i w\u0142\u0105czy\u0142 si\u0119 tryb edycji. Wyjd\u017amy z trybu edycji, naciskaj\u0105c klawisz Esc. Naci\u015bnijmy klawisz U, aby cofn\u0105\u0107 zmian\u0119. Naci\u015bnijmy klawisz O, aby otworzy\u0107 wiersz powy\u017cej kursora: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5 Wyjd\u017amy z trybu edycji, naciskaj\u0105c klawisz Esc, i naci\u015bnijmy klawisz u, aby cofn\u0105\u0107 zmian\u0119. Usuwanie tekstu Jak mo\u017cna si\u0119 spodziewa\u0107, vi udost\u0119pnia wiele polece\u0144 s\u0142u\u017c\u0105cych do usuwania tekstu, z kt\u00f3rych wszystkie sk\u0142adaj\u0105 si\u0119 z jednego lub kilku znak\u00f3w. Na przyk\u0142ad polecenie x usuwa znak w miejscu po\u0142o\u017cenia kursora. x mo\u017ce by\u0107 poprzedzony liczb\u0105, okre\u015blaj\u0105c\u0105, ile znak\u00f3w nale\u017cy usun\u0105\u0107. Polecenie d ma bardziej og\u00f3lne znaczenie. Podobnie jak x, mo\u017cna je poprzedzi\u0107 liczb\u0105, okre\u015blaj\u0105c\u0105, ile razy nale\u017cy wykona\u0107 polecenie usuwania. Ponadto po znaku d zawsze wyst\u0119puje polecenie zmiany po\u0142o\u017cenia, steruj\u0105ce rozmiarem usuwanego fragmentu. Kilka przyk\u0142ad\u00f3w znajdziemy w tabeli 12.3. Tabela 12.3. Polecenia s\u0142u\u017c\u0105ce do usuwania tekstu Polecenie Usuwa cc ca\u0142\u0105 bie\u017c\u0105c\u0105 lini\u0119 tekstu :%d ca\u0142\u0105 zawarto\u015b\u0107 pliku x bie\u017c\u0105cy znak X usuwa znak przed kursorem 3x bie\u017c\u0105cy znak i dwa kolejne znaki dd bie\u017c\u0105cy wiersz 5dd bie\u017c\u0105cy wiersz i cztery kolejne wiersze dW fragment od bie\u017c\u0105cego po\u0142o\u017cenia kursora do pocz\u0105tku kolejnego s\u0142owa d$ fragment od bie\u017c\u0105cego po\u0142o\u017cenia kursora do ko\u0144ca bie\u017c\u0105cego wiersza d0 fragment od bie\u017c\u0105cego po\u0142o\u017cenia kursora do pocz\u0105tku wiersza d^ fragment od bie\u017c\u0105cego po\u0142o\u017cenia kursora do pierwszego znaku nieb\u0119d\u0105cego bia\u0142ym znakiem w bie\u017c\u0105cym wierszu dG fragment od bie\u017c\u0105cego wiersza do ko\u0144ca pliku d20G fragment od bie\u017c\u0105cego wiersza do 20. wiersza pliku Usuwanie zawarto\u015bci pliku Komenda ggVG gg - przeskakuje do poczatku pliku V - zaznacza bie\u017c\u0105c\u0105 lini\u0119 (w tym przypadku pierwsz\u0105 lini\u0119 bie\u017c\u0105cego pliku) G - przeskakuje do konca pliku. Jako \u017ce zanzaczyli\u015bmy pierwsz\u0105 lini\u0119 polecenie G zaznaczy nam wszystkie linie pliku. Wci\u015bni\u0119cie d lub x wykasuje wszystkie linie Alternatywna metoda usuwania zawarto\u015bci pliku Komenda :1,$d Jest to o tyle elastyczniejsza metoda i\u017c potrafi nam skasowa\u0107 zawarto\u015b\u0107 pliku pomi\u0119dzy wierszami. U\u017cywaj\u0105c polecenia :4,$-2d zostawimy 3 pierwsze linie i dwie ostatnie usuwaj\u0105c pozosta\u0142\u0105 zawarto\u015b\u0107 pliku. Umie\u015b\u0107my kursor w wyrazie To w pierwszym wierszu naszego tekstu. Naci\u015bnijmy kilkakrotnie klawisz x, a\u017c usuniemy reszt\u0119 zdania. Nast\u0119pnie kilkakrotnie naci\u015bnijmy klawisz u, aby cofn\u0105\u0107 usuwanie. UWAGA W prawdziwym programie vi mo\u017cemy cofn\u0105\u0107 tylko jedno polecenie. Natomiast w programie vim mo\u017cemy cofn\u0105\u0107 kilka polece\u0144. Ponownie usu\u0144my tekst, tym razem korzystaj\u0105c z polecenia d. Przenie\u015bmy kursor do s\u0142owa To i wpiszmy dW , aby usun\u0105\u0107 s\u0142owo: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5 Wpiszmy d$ , aby usun\u0105\u0107 fragment od miejsca po\u0142o\u017cenia kursora do ko\u0144ca wiersza: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5 Wpiszmy dG, aby usun\u0105\u0107 fragment od bie\u017c\u0105cego wiersza do ko\u0144ca pliku: ~ ~ ~ ~ Wpiszmy trzykrotnie u , aby cofn\u0105\u0107 zmiany. Wycinanie, kopiowanie i wklejanie tekstu Polecenie d nie tylko usuwa tekst, ale tak\u017ce go \u201ewycina\u201d. Za ka\u017cdym razem, gdy u\u017cyjemy polecenia d, usuni\u0119ty fragment jest kopiowany do bufora wklejania (czyli do schowka), z kt\u00f3rego mo\u017cemy go p\u00f3\u017aniej pobra\u0107, korzystaj\u0105c z polecenia p, kt\u00f3re wklei zawarto\u015b\u0107 bufora za miejscem po\u0142o\u017cenia kursora, lub przed kursorem. Polecenie y s\u0142u\u017cy do kopiowania tekstu. Dzia\u0142a ono w podobny spos\u00f3b jak polecenie d. W tabeli 12.4 znajdziemy kilka przyk\u0142ad\u00f3w kombinacji polecenia y z r\u00f3\u017cnymi poleceniami zmiany po\u0142o\u017cenia kursora. Tabela 12.4. Polecenia kopiowania Polecenie Kopiuje yy bie\u017c\u0105cy wiersz 5yy bie\u017c\u0105cy i cztery kolejne wiersze yW fragment od bie\u017c\u0105cego po\u0142o\u017cenia kursora do pocz\u0105tku kolejnego s\u0142owa y$ fragment od bie\u017c\u0105cego po\u0142o\u017cenia kursora do ko\u0144ca bie\u017c\u0105cego wiersza y0 fragment od bie\u017c\u0105cego po\u0142o\u017cenia kursora do ko\u0144ca bie\u017c\u0105cego wiersza y^ fragment od bie\u017c\u0105cego po\u0142o\u017cenia kursora do pierwszego znaku nieb\u0119d\u0105cego bia\u0142ym znakiem w bie\u017c\u0105cym wierszu yG fragment od bie\u017c\u0105cego wiersza do ko\u0144ca pliku y20G fragment od bie\u017c\u0105cego wiersza do 20. wiersza pliku Po\u0107wiczmy kopiowanie i wklejanie. Umie\u015b\u0107my kursor w pierwszym wierszu pliku i wpiszmy yy , aby skopiowa\u0107 bie\u017c\u0105cy wiersz. Nast\u0119pnie przesu\u0144my kursor do ostatniego wiersza (G) i wpiszmy p , aby wklei\u0107 skopiowany wiersz poni\u017cej bie\u017c\u0105cego wiersza: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5 Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Podobnie jak poprzednio, polecenie u cofnie zmian\u0119. Upewnijmy si\u0119, \u017ce kursor nadal znajduje si\u0119 w ostatnim wierszu pliku, i wpiszmy P, aby wklei\u0107 tekst powy\u017cej bie\u017c\u0105cego wiersza: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 5 Wypr\u00f3bujmy kilka innych polece\u0144 y, wymienionych w tabeli 12.4, i sprawd\u017amy zachowanie polece\u0144 p i P. Gdy sko\u0144czymy, przywr\u00f3\u0107my plik do stanu pocz\u0105tkowego. \u0141\u0105czenie wierszy vi jest do\u015b\u0107 restrykcyjny, je\u015bli chodzi o to, jak interpretuje wiersze. Zwykle nie mo\u017cemy po\u0142\u0105czy\u0107 wiersza z wierszem znajduj\u0105cym si\u0119 poni\u017cej poprzez przeniesienie kursora na koniec wiersza i usuni\u0119cie znaku ko\u0144ca wiersza. Dlatego w vi dost\u0119pne jest specjalne polecenie J (nie mylmy go z poleceniem j, kt\u00f3re przesuwa kursor), s\u0142u\u017c\u0105ce do \u0142\u0105czenia wierszy. Je\u015bli umie\u015bcimy kursor w wierszu 3. i wpiszemy polecenie J, zobaczymy nast\u0119puj\u0105cy efekt: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5","title":"Podstawowa Edycja"},{"location":"VIM/Podstawowa_Edycja/#podstawowa-edycja","text":"Najcz\u0119\u015bciej podczas edycji wykonujemy kilka podstawowych operacji, takich jak wpisywanie tekstu, usuwanie tekstu oraz przenoszenie tekstu poprzez wycinanie i wklejanie. Oczywi\u015bcie vi pozwala na wykonanie wszystkich wymienionych operacji na sw\u00f3j w\u0142asny spos\u00f3b. W programie vi mo\u017cemy tak\u017ce w ograniczonym stopniu cofa\u0107 polecenia. Gdy naci\u015bniemy u w trybie polece\u0144, vi cofnie ostatni\u0105 dokonan\u0105 zmian\u0119. Mo\u017ce si\u0119 to przyda\u0107 podczas wypr\u00f3bowywania podstawowych polece\u0144 edycji.","title":"Podstawowa edycja"},{"location":"VIM/Podstawowa_Edycja/#dodawanie-tekstu","text":"W trybie edycji programu vi mo\u017cemy dodawa\u0107 tekst na kilka sposob\u00f3w. Korzystali\u015bmy ju\u017c z polecenia i do wstawiania tekstu. Powr\u00f3\u0107my na chwil\u0119 do pliku foo.txt: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. Gdyby\u015bmy chcieli doda\u0107 nieco tekstu na ko\u0144cu tego zdania, okaza\u0142oby si\u0119, \u017ce polecenie i nam na to nie pozwoli, poniewa\u017c nie mo\u017cemy przenie\u015b\u0107 kursora poza koniec wiersza. W vi dost\u0119pne jest polecenie s\u0142u\u017c\u0105ce do dodawania tekstu. Jest to polecenie a. Je\u015bli umie\u015bcimy kursor na ko\u0144cu wiersza i naci\u015bniemy klawisz A, kursor przejdzie poza koniec wiersza, a vi wejdzie w tryb edycji. B\u0119dziemy ju\u017c mogli doda\u0107 nieco tekstu: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Pami\u0119tajmy o naci\u015bni\u0119ciu klawisza Esc, aby wyj\u015b\u0107 z trybu edycji. Poniewa\u017c niemal zawsze chcemy dodawa\u0107 tekst na ko\u0144cu wiersza, vi udost\u0119pnia skr\u00f3t s\u0142u\u017c\u0105cy do przeniesienia kursora na koniec bie\u017c\u0105cego wiersza i rozpocz\u0119cie dodawania tekstu. Jest to polecenie A. Wypr\u00f3bujmy je i dodajmy do naszego pliku kilka nowych wierszy. Najpierw przenie\u015bmy kursor na pocz\u0105tek wiersza, korzystaj\u0105c z polecenia 0 (zero). Nast\u0119pnie naci\u015bnijmy klawisz A i dodajmy nast\u0119puj\u0105ce wiersze: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5 Naci\u015bnijmy klawisz Esc, aby wyj\u015b\u0107 z trybu edycji. Jak wida\u0107, polecenie A jest wygodniejsze, poniewa\u017c przenosi kursor na koniec wiersza przed w\u0142\u0105czeniem trybu edycji.","title":"Dodawanie tekstu"},{"location":"VIM/Podstawowa_Edycja/#otwieranie-wiersza","text":"Innym sposobem wstawiania wiersza jest \u201eotwieranie\u201d wiersza. Mo\u017cemy wstawi\u0107 pusty wiersz pomi\u0119dzy dwa istniej\u0105ce wiersze i w\u0142\u0105czy\u0107 tryb edycji. Polecenie to ma dwie postacie, przedstawione w tabeli 12.2. Tabela 12.2. Klawisze s\u0142u\u017c\u0105ce do otwierania wiersza Polecenie Otwiera o wiersz poni\u017cej bie\u017c\u0105cego wiersza O wiersz powy\u017cej bie\u017c\u0105cego wiersza Mo\u017cemy to zademonstrowa\u0107 w nast\u0119puj\u0105cy spos\u00f3b \u2014 umie\u015b\u0107my kursor w wierszu 3. i naci\u015bnijmy klawisz o. Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5 Poni\u017cej trzeciego wiersza zosta\u0142 wstawiony nowy wiersz i w\u0142\u0105czy\u0142 si\u0119 tryb edycji. Wyjd\u017amy z trybu edycji, naciskaj\u0105c klawisz Esc. Naci\u015bnijmy klawisz U, aby cofn\u0105\u0107 zmian\u0119. Naci\u015bnijmy klawisz O, aby otworzy\u0107 wiersz powy\u017cej kursora: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5 Wyjd\u017amy z trybu edycji, naciskaj\u0105c klawisz Esc, i naci\u015bnijmy klawisz u, aby cofn\u0105\u0107 zmian\u0119.","title":"Otwieranie wiersza"},{"location":"VIM/Podstawowa_Edycja/#usuwanie-tekstu","text":"Jak mo\u017cna si\u0119 spodziewa\u0107, vi udost\u0119pnia wiele polece\u0144 s\u0142u\u017c\u0105cych do usuwania tekstu, z kt\u00f3rych wszystkie sk\u0142adaj\u0105 si\u0119 z jednego lub kilku znak\u00f3w. Na przyk\u0142ad polecenie x usuwa znak w miejscu po\u0142o\u017cenia kursora. x mo\u017ce by\u0107 poprzedzony liczb\u0105, okre\u015blaj\u0105c\u0105, ile znak\u00f3w nale\u017cy usun\u0105\u0107. Polecenie d ma bardziej og\u00f3lne znaczenie. Podobnie jak x, mo\u017cna je poprzedzi\u0107 liczb\u0105, okre\u015blaj\u0105c\u0105, ile razy nale\u017cy wykona\u0107 polecenie usuwania. Ponadto po znaku d zawsze wyst\u0119puje polecenie zmiany po\u0142o\u017cenia, steruj\u0105ce rozmiarem usuwanego fragmentu. Kilka przyk\u0142ad\u00f3w znajdziemy w tabeli 12.3. Tabela 12.3. Polecenia s\u0142u\u017c\u0105ce do usuwania tekstu Polecenie Usuwa cc ca\u0142\u0105 bie\u017c\u0105c\u0105 lini\u0119 tekstu :%d ca\u0142\u0105 zawarto\u015b\u0107 pliku x bie\u017c\u0105cy znak X usuwa znak przed kursorem 3x bie\u017c\u0105cy znak i dwa kolejne znaki dd bie\u017c\u0105cy wiersz 5dd bie\u017c\u0105cy wiersz i cztery kolejne wiersze dW fragment od bie\u017c\u0105cego po\u0142o\u017cenia kursora do pocz\u0105tku kolejnego s\u0142owa d$ fragment od bie\u017c\u0105cego po\u0142o\u017cenia kursora do ko\u0144ca bie\u017c\u0105cego wiersza d0 fragment od bie\u017c\u0105cego po\u0142o\u017cenia kursora do pocz\u0105tku wiersza d^ fragment od bie\u017c\u0105cego po\u0142o\u017cenia kursora do pierwszego znaku nieb\u0119d\u0105cego bia\u0142ym znakiem w bie\u017c\u0105cym wierszu dG fragment od bie\u017c\u0105cego wiersza do ko\u0144ca pliku d20G fragment od bie\u017c\u0105cego wiersza do 20. wiersza pliku","title":"Usuwanie tekstu"},{"location":"VIM/Podstawowa_Edycja/#usuwanie-zawartosci-pliku","text":"Komenda ggVG gg - przeskakuje do poczatku pliku V - zaznacza bie\u017c\u0105c\u0105 lini\u0119 (w tym przypadku pierwsz\u0105 lini\u0119 bie\u017c\u0105cego pliku) G - przeskakuje do konca pliku. Jako \u017ce zanzaczyli\u015bmy pierwsz\u0105 lini\u0119 polecenie G zaznaczy nam wszystkie linie pliku. Wci\u015bni\u0119cie d lub x wykasuje wszystkie linie","title":"Usuwanie zawarto\u015bci pliku"},{"location":"VIM/Podstawowa_Edycja/#alternatywna-metoda-usuwania-zawartosci-pliku","text":"Komenda :1,$d Jest to o tyle elastyczniejsza metoda i\u017c potrafi nam skasowa\u0107 zawarto\u015b\u0107 pliku pomi\u0119dzy wierszami. U\u017cywaj\u0105c polecenia :4,$-2d zostawimy 3 pierwsze linie i dwie ostatnie usuwaj\u0105c pozosta\u0142\u0105 zawarto\u015b\u0107 pliku. Umie\u015b\u0107my kursor w wyrazie To w pierwszym wierszu naszego tekstu. Naci\u015bnijmy kilkakrotnie klawisz x, a\u017c usuniemy reszt\u0119 zdania. Nast\u0119pnie kilkakrotnie naci\u015bnijmy klawisz u, aby cofn\u0105\u0107 usuwanie. UWAGA W prawdziwym programie vi mo\u017cemy cofn\u0105\u0107 tylko jedno polecenie. Natomiast w programie vim mo\u017cemy cofn\u0105\u0107 kilka polece\u0144. Ponownie usu\u0144my tekst, tym razem korzystaj\u0105c z polecenia d. Przenie\u015bmy kursor do s\u0142owa To i wpiszmy dW , aby usun\u0105\u0107 s\u0142owo: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5 Wpiszmy d$ , aby usun\u0105\u0107 fragment od miejsca po\u0142o\u017cenia kursora do ko\u0144ca wiersza: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5 Wpiszmy dG, aby usun\u0105\u0107 fragment od bie\u017c\u0105cego wiersza do ko\u0144ca pliku: ~ ~ ~ ~ Wpiszmy trzykrotnie u , aby cofn\u0105\u0107 zmiany.","title":"Alternatywna metoda usuwania zawarto\u015bci pliku"},{"location":"VIM/Podstawowa_Edycja/#wycinanie-kopiowanie-i-wklejanie-tekstu","text":"Polecenie d nie tylko usuwa tekst, ale tak\u017ce go \u201ewycina\u201d. Za ka\u017cdym razem, gdy u\u017cyjemy polecenia d, usuni\u0119ty fragment jest kopiowany do bufora wklejania (czyli do schowka), z kt\u00f3rego mo\u017cemy go p\u00f3\u017aniej pobra\u0107, korzystaj\u0105c z polecenia p, kt\u00f3re wklei zawarto\u015b\u0107 bufora za miejscem po\u0142o\u017cenia kursora, lub przed kursorem. Polecenie y s\u0142u\u017cy do kopiowania tekstu. Dzia\u0142a ono w podobny spos\u00f3b jak polecenie d. W tabeli 12.4 znajdziemy kilka przyk\u0142ad\u00f3w kombinacji polecenia y z r\u00f3\u017cnymi poleceniami zmiany po\u0142o\u017cenia kursora. Tabela 12.4. Polecenia kopiowania Polecenie Kopiuje yy bie\u017c\u0105cy wiersz 5yy bie\u017c\u0105cy i cztery kolejne wiersze yW fragment od bie\u017c\u0105cego po\u0142o\u017cenia kursora do pocz\u0105tku kolejnego s\u0142owa y$ fragment od bie\u017c\u0105cego po\u0142o\u017cenia kursora do ko\u0144ca bie\u017c\u0105cego wiersza y0 fragment od bie\u017c\u0105cego po\u0142o\u017cenia kursora do ko\u0144ca bie\u017c\u0105cego wiersza y^ fragment od bie\u017c\u0105cego po\u0142o\u017cenia kursora do pierwszego znaku nieb\u0119d\u0105cego bia\u0142ym znakiem w bie\u017c\u0105cym wierszu yG fragment od bie\u017c\u0105cego wiersza do ko\u0144ca pliku y20G fragment od bie\u017c\u0105cego wiersza do 20. wiersza pliku Po\u0107wiczmy kopiowanie i wklejanie. Umie\u015b\u0107my kursor w pierwszym wierszu pliku i wpiszmy yy , aby skopiowa\u0107 bie\u017c\u0105cy wiersz. Nast\u0119pnie przesu\u0144my kursor do ostatniego wiersza (G) i wpiszmy p , aby wklei\u0107 skopiowany wiersz poni\u017cej bie\u017c\u0105cego wiersza: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5 Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Podobnie jak poprzednio, polecenie u cofnie zmian\u0119. Upewnijmy si\u0119, \u017ce kursor nadal znajduje si\u0119 w ostatnim wierszu pliku, i wpiszmy P, aby wklei\u0107 tekst powy\u017cej bie\u017c\u0105cego wiersza: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 5 Wypr\u00f3bujmy kilka innych polece\u0144 y, wymienionych w tabeli 12.4, i sprawd\u017amy zachowanie polece\u0144 p i P. Gdy sko\u0144czymy, przywr\u00f3\u0107my plik do stanu pocz\u0105tkowego.","title":"Wycinanie, kopiowanie i wklejanie tekstu"},{"location":"VIM/Podstawowa_Edycja/#aczenie-wierszy","text":"vi jest do\u015b\u0107 restrykcyjny, je\u015bli chodzi o to, jak interpretuje wiersze. Zwykle nie mo\u017cemy po\u0142\u0105czy\u0107 wiersza z wierszem znajduj\u0105cym si\u0119 poni\u017cej poprzez przeniesienie kursora na koniec wiersza i usuni\u0119cie znaku ko\u0144ca wiersza. Dlatego w vi dost\u0119pne jest specjalne polecenie J (nie mylmy go z poleceniem j, kt\u00f3re przesuwa kursor), s\u0142u\u017c\u0105ce do \u0142\u0105czenia wierszy. Je\u015bli umie\u015bcimy kursor w wierszu 3. i wpiszemy polecenie J, zobaczymy nast\u0119puj\u0105cy efekt: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5","title":"\u0141\u0105czenie wierszy"},{"location":"VIM/Szukanie_i_zastepowanie/","text":"Szukanie i zast\u0119powanie vi pozwala na przeniesienie kursora do miejsca b\u0119d\u0105cego wynikiem wyszukiwania. Dotyczy to jednego wiersza lub ca\u0142ego pliku. Program mo\u017ce te\u017c zast\u0119powa\u0107 tekst, \u017c\u0105daj\u0105c (lub nie) potwierdzenia od u\u017cytkownika. Przeszukiwanie wiersza Polecenie f przeszukuje wiersz i przenosi kursor do kolejnego wyst\u0105pienia podanego znaku. Na przyk\u0142ad polecenie fa przesunie kursor do kolejnego wyst\u0105pienia znaku a w bie\u017c\u0105cym wierszu. Po wyszukaniu znaku w wierszu mo\u017cemy powt\u00f3rzy\u0107 t\u0119 operacj\u0119, wpisuj\u0105c \u015brednik. Przeszukiwanie ca\u0142ego pliku Aby przenie\u015b\u0107 kursor do kolejnego wyst\u0105pienia s\u0142owa lub frazy, korzystamy z polecenia /. Dzia\u0142a ono podobnie jak polecenie less opisane wcze\u015bniej. Gdy wpiszemy polecenie /, w dolnej cz\u0119\u015bci ekranu pojawi si\u0119 uko\u015bnik. Nast\u0119pnie wpisujemy wyraz lub fraz\u0119, kt\u00f3r\u0105 chcemy wyszuka\u0107, i naciskamy Enter. Kursor zostanie przesuni\u0119ty do miejsca zawieraj\u0105cego wyszukiwany tekst. Korzystaj\u0105c z polecenia n, mo\u017cemy kilkakrotnie powt\u00f3rzy\u0107 wyszukiwanie na podstawie wcze\u015bniejszego tekstu. Oto przyk\u0142ad: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5 Umie\u015b\u0107my kursor w pierwszym wierszu pliku, wpiszmy poni\u017csze polecenie i naci\u015bnijmy Enter: /Wiersz Kursor zostanie przeniesiony do drugiego wiersza. Nast\u0119pnie wpiszmy n, aby przenie\u015b\u0107 kursor do trzeciego wiersza. Powt\u00f3rzmy kilkakrotnie polecenie n, aby przesun\u0105\u0107 kursor w d\u00f3\u0142 pliku, a\u017c wyczerpi\u0105 si\u0119 pasuj\u0105ce fragmenty. Chocia\u017c dotychczas wyszukiwali\u015bmy na podstawie s\u0142\u00f3w i fraz, vi pozwala na wykorzystanie wyra\u017ce\u0144 regularnych, pot\u0119\u017cnej techniki s\u0142u\u017c\u0105cej do definiowania skomplikowanych wzorc\u00f3w tekstowych. Wyszukiwanie i zast\u0119powanie globalne vi wykorzystuje polecenie ex do wykonania operacji \u201ewyszukaj i zamie\u0144\u201d (zwanej w programie vi substytucj\u0105) w kilku wierszach lub w ca\u0142ym pliku. Aby zamieni\u0107 Wiersz na wiersz w ca\u0142ym pliku, nale\u017cy wpisa\u0107 nast\u0119puj\u0105ce polecenie: :%s/Wiersz/wiersz/g Rozbijmy powy\u017csze polecenie na poszczeg\u00f3lne elementy i sprawd\u017amy ich znaczenie (tabela 12.5). Po wykonaniu polecenia \u201ewyszukaj i zamie\u0144\u201d tre\u015b\u0107 naszego pliku jest nast\u0119puj\u0105ca: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. wiersz 2 wiersz 3 wiersz 4 wiersz 5 Tabela 12.5. Przyk\u0142ad sk\u0142adni globalnego wyszukiwania i zast\u0119powania: Element Znaczenie : Znak dwukropka rozpoczyna polecenie ex. % Okre\u015bla zakres wierszy dla polecenia. % jest skr\u00f3tem oznaczaj\u0105cym fragment od pierwszego do ostatniego wiersza. Mo\u017cemy te\u017c zdefiniowa\u0107 w\u0142asny zakres 1,5 (poniewa\u017c nasz plik zawiera 5 wierszy) lub 1,$, co oznacza \u201eod wiersza pierwszego do ostatniego wiersza w pliku\u201d. Je\u015bli pominiemy zakres wierszy, operacja zostanie wykonana tylko w bie\u017c\u0105cym wierszu. s Okre\u015bla operacj\u0119 \u2014 w tym przypadku substytucj\u0119 (wyszukanie i zamiana). /Wiersz/wiersz/ Wzorzec wyszukania i zamiany tekstu. g Definiuje globalne dzia\u0142anie polecenia. W tym przypadku substytucja b\u0119dzie wykonana na ka\u017cdej instancji znalezionego \u0142a\u0144cucha w ka\u017cdym wierszu. Je\u015bli pominiemy g, zamienione zostanie tylko pierwsze wyst\u0105pienie wyszukiwanego tekstu w ka\u017cdym wierszu. Mo\u017cemy te\u017c zdefiniowa\u0107 polecenie substytucji wymagaj\u0105ce potwierdzenia u\u017cytkownika. W tym celu nale\u017cy na ko\u0144cu polecenia doda\u0107 znak c. Na przyk\u0142ad: :%s/wiersz/Wiersz/gc Polecenie to przywr\u00f3ci pierwotn\u0105 tre\u015b\u0107 pliku. Jednak przed dokonaniem ka\u017cdej zamiany vi si\u0119 zatrzyma i poprosi nas o potwierdzenie w nast\u0119puj\u0105cy spos\u00f3b: replace with Wiersz (y/n/a/q/l/^E/^Y)? W odpowiedzi mo\u017cemy wpisa\u0107 jeden ze znak\u00f3w w nawiasie. Ich znaczenie jest opisane w tabeli 12.6. Tabela 12.6. Znaki potwierdzenia zamiany Klawisz Dzia\u0142anie y Dokona zamiany. n Pominie t\u0119 instancj\u0119 wzorca. a Dokona zamiany tej i wszystkich kolejnych instancji wzorca. q lub Esc Zatrzymuje proces zamiany. l Wykona bie\u017c\u0105c\u0105 zamian\u0119 i zako\u0144czy proces (skr\u00f3t od ang. s\u0142owa last \u2014 \u201eostatni\u201d). Ctrl+E, Ctrl+Y Przewija odpowiednio w d\u00f3\u0142 lub w g\u00f3r\u0119. Przydatne podczas przegl\u0105dania proponowanych zamian. Je\u015bli wpiszemy y , operacja zostanie wykonana. Natomiast po wybraniu n program vi zignoruje t\u0119 zmian\u0119 i przejdzie do nast\u0119pnej.","title":"Szukanie i zastepowanie"},{"location":"VIM/Szukanie_i_zastepowanie/#szukanie-i-zastepowanie","text":"vi pozwala na przeniesienie kursora do miejsca b\u0119d\u0105cego wynikiem wyszukiwania. Dotyczy to jednego wiersza lub ca\u0142ego pliku. Program mo\u017ce te\u017c zast\u0119powa\u0107 tekst, \u017c\u0105daj\u0105c (lub nie) potwierdzenia od u\u017cytkownika.","title":"Szukanie i zast\u0119powanie"},{"location":"VIM/Szukanie_i_zastepowanie/#przeszukiwanie-wiersza","text":"Polecenie f przeszukuje wiersz i przenosi kursor do kolejnego wyst\u0105pienia podanego znaku. Na przyk\u0142ad polecenie fa przesunie kursor do kolejnego wyst\u0105pienia znaku a w bie\u017c\u0105cym wierszu. Po wyszukaniu znaku w wierszu mo\u017cemy powt\u00f3rzy\u0107 t\u0119 operacj\u0119, wpisuj\u0105c \u015brednik. Przeszukiwanie ca\u0142ego pliku Aby przenie\u015b\u0107 kursor do kolejnego wyst\u0105pienia s\u0142owa lub frazy, korzystamy z polecenia /. Dzia\u0142a ono podobnie jak polecenie less opisane wcze\u015bniej. Gdy wpiszemy polecenie /, w dolnej cz\u0119\u015bci ekranu pojawi si\u0119 uko\u015bnik. Nast\u0119pnie wpisujemy wyraz lub fraz\u0119, kt\u00f3r\u0105 chcemy wyszuka\u0107, i naciskamy Enter. Kursor zostanie przesuni\u0119ty do miejsca zawieraj\u0105cego wyszukiwany tekst. Korzystaj\u0105c z polecenia n, mo\u017cemy kilkakrotnie powt\u00f3rzy\u0107 wyszukiwanie na podstawie wcze\u015bniejszego tekstu. Oto przyk\u0142ad: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. Wiersz 2 Wiersz 3 Wiersz 4 Wiersz 5 Umie\u015b\u0107my kursor w pierwszym wierszu pliku, wpiszmy poni\u017csze polecenie i naci\u015bnijmy Enter: /Wiersz Kursor zostanie przeniesiony do drugiego wiersza. Nast\u0119pnie wpiszmy n, aby przenie\u015b\u0107 kursor do trzeciego wiersza. Powt\u00f3rzmy kilkakrotnie polecenie n, aby przesun\u0105\u0107 kursor w d\u00f3\u0142 pliku, a\u017c wyczerpi\u0105 si\u0119 pasuj\u0105ce fragmenty. Chocia\u017c dotychczas wyszukiwali\u015bmy na podstawie s\u0142\u00f3w i fraz, vi pozwala na wykorzystanie wyra\u017ce\u0144 regularnych, pot\u0119\u017cnej techniki s\u0142u\u017c\u0105cej do definiowania skomplikowanych wzorc\u00f3w tekstowych.","title":"Przeszukiwanie wiersza"},{"location":"VIM/Szukanie_i_zastepowanie/#wyszukiwanie-i-zastepowanie-globalne","text":"vi wykorzystuje polecenie ex do wykonania operacji \u201ewyszukaj i zamie\u0144\u201d (zwanej w programie vi substytucj\u0105) w kilku wierszach lub w ca\u0142ym pliku. Aby zamieni\u0107 Wiersz na wiersz w ca\u0142ym pliku, nale\u017cy wpisa\u0107 nast\u0119puj\u0105ce polecenie: :%s/Wiersz/wiersz/g Rozbijmy powy\u017csze polecenie na poszczeg\u00f3lne elementy i sprawd\u017amy ich znaczenie (tabela 12.5). Po wykonaniu polecenia \u201ewyszukaj i zamie\u0144\u201d tre\u015b\u0107 naszego pliku jest nast\u0119puj\u0105ca: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. To by\u0142o fajne. wiersz 2 wiersz 3 wiersz 4 wiersz 5 Tabela 12.5. Przyk\u0142ad sk\u0142adni globalnego wyszukiwania i zast\u0119powania: Element Znaczenie : Znak dwukropka rozpoczyna polecenie ex. % Okre\u015bla zakres wierszy dla polecenia. % jest skr\u00f3tem oznaczaj\u0105cym fragment od pierwszego do ostatniego wiersza. Mo\u017cemy te\u017c zdefiniowa\u0107 w\u0142asny zakres 1,5 (poniewa\u017c nasz plik zawiera 5 wierszy) lub 1,$, co oznacza \u201eod wiersza pierwszego do ostatniego wiersza w pliku\u201d. Je\u015bli pominiemy zakres wierszy, operacja zostanie wykonana tylko w bie\u017c\u0105cym wierszu. s Okre\u015bla operacj\u0119 \u2014 w tym przypadku substytucj\u0119 (wyszukanie i zamiana). /Wiersz/wiersz/ Wzorzec wyszukania i zamiany tekstu. g Definiuje globalne dzia\u0142anie polecenia. W tym przypadku substytucja b\u0119dzie wykonana na ka\u017cdej instancji znalezionego \u0142a\u0144cucha w ka\u017cdym wierszu. Je\u015bli pominiemy g, zamienione zostanie tylko pierwsze wyst\u0105pienie wyszukiwanego tekstu w ka\u017cdym wierszu. Mo\u017cemy te\u017c zdefiniowa\u0107 polecenie substytucji wymagaj\u0105ce potwierdzenia u\u017cytkownika. W tym celu nale\u017cy na ko\u0144cu polecenia doda\u0107 znak c. Na przyk\u0142ad: :%s/wiersz/Wiersz/gc Polecenie to przywr\u00f3ci pierwotn\u0105 tre\u015b\u0107 pliku. Jednak przed dokonaniem ka\u017cdej zamiany vi si\u0119 zatrzyma i poprosi nas o potwierdzenie w nast\u0119puj\u0105cy spos\u00f3b: replace with Wiersz (y/n/a/q/l/^E/^Y)? W odpowiedzi mo\u017cemy wpisa\u0107 jeden ze znak\u00f3w w nawiasie. Ich znaczenie jest opisane w tabeli 12.6. Tabela 12.6. Znaki potwierdzenia zamiany Klawisz Dzia\u0142anie y Dokona zamiany. n Pominie t\u0119 instancj\u0119 wzorca. a Dokona zamiany tej i wszystkich kolejnych instancji wzorca. q lub Esc Zatrzymuje proces zamiany. l Wykona bie\u017c\u0105c\u0105 zamian\u0119 i zako\u0144czy proces (skr\u00f3t od ang. s\u0142owa last \u2014 \u201eostatni\u201d). Ctrl+E, Ctrl+Y Przewija odpowiednio w d\u00f3\u0142 lub w g\u00f3r\u0119. Przydatne podczas przegl\u0105dania proponowanych zamian. Je\u015bli wpiszemy y , operacja zostanie wykonana. Natomiast po wybraniu n program vi zignoruje t\u0119 zmian\u0119 i przejdzie do nast\u0119pnej.","title":"Wyszukiwanie i zast\u0119powanie globalne"},{"location":"VIM/Tryb_Edycji/","text":"Tryby edycji Uruchomimy teraz vi ponownie, lecz tym razem przekazuj\u0105c w poleceniu nazw\u0119 nieistniej\u0105cego pliku. Tak tworzymy nowy plik za pomoc\u0105 vi: [me@linuxbox ~]$ rm -f foo.txt [me@linuxbox ~]$ vi foo.txt Je\u015bli wszystko p\u00f3jdzie dobrze, powinni\u015bmy uzyska\u0107 na ekranie nast\u0119puj\u0105cy widok: ~ ~ \"foo.txt\" [New File] Znaki tyldy (~) na pocz\u0105tku wierszy oznaczaj\u0105, \u017ce wiersze te nie zawieraj\u0105 \u017cadnego tekstu. Nasz plik jest wi\u0119c pusty. Niczego jeszcze nie wpisujmy! Kolejn\u0105 wa\u017cn\u0105 funkcj\u0105 vi, kt\u00f3r\u0105 musimy pozna\u0107 (opr\u00f3cz sposobu wychodzenia z programu) jest to, \u017ce vi mo\u017ce pracowa\u0107 w r\u00f3\u017cnych trybach. Po uruchomieniu program znajduje si\u0119 w trybie polece\u0144. W tym trybie niemal ka\u017cdy klawisz odpowiada poleceniu, dlatego je\u015bli zaczniemy co\u015b pisa\u0107, vi w\u0142a\u015bciwie oszaleje, pozostawiaj\u0105c nas z wielkim ba\u0142aganem. W\u0142\u0105czanie trybu edycji Aby doda\u0107 do pliku troch\u0119 tekstu, musimy najpierw w\u0142\u0105czy\u0107 tryb edycji. W tym celu nale\u017cy nacisn\u0105\u0107 klawisz i. Gdy to zrobimy, powinni\u015bmy nast\u0119puj\u0105cy napis w dolnej cz\u0119\u015bci ekranu, o ile vim dzia\u0142a w zwyk\u0142ym wzbogaconym trybie (nie b\u0119dzie on widoczny w trybie zgodnym z vi): -- INSERT -- Mo\u017cemy ju\u017c wpisa\u0107 jaki\u015b tekst. Na przyk\u0142ad: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. Aby wyj\u015b\u0107 z trybu wstawiania i powr\u00f3ci\u0107 do trybu polece\u0144, nale\u017cy nacisn\u0105\u0107 klawisz Esc. Zapisywanie pracy Aby zapisa\u0107 zmiany wprowadzone w pliku, musimy w\u0142\u0105czy\u0107 polecenia ex, pozostaj\u0105c w trybie polece\u0144. Jest to bardzo \u0142atwe, wystarczy nacisn\u0105\u0107 klawisz :. Gdy to zrobimy, w dolnej cz\u0119\u015bci ekranu powinien si\u0119 pojawi\u0107 znak dwukropka: : Aby zapisa\u0107 nasz zmodyfikowany plik, po dwukropku wpisujemy w, a nast\u0119pnie naciskamy Enter: :w Plik zostanie zapisany na twardym dysku. W dolnej cz\u0119\u015bci ekranu powinni\u015bmy uzyska\u0107 potwierdzenie, jak poni\u017cej: \"foo.txt\" [New] 1L, 46C written","title":"Tryb Edycji"},{"location":"VIM/Tryb_Edycji/#tryby-edycji","text":"Uruchomimy teraz vi ponownie, lecz tym razem przekazuj\u0105c w poleceniu nazw\u0119 nieistniej\u0105cego pliku. Tak tworzymy nowy plik za pomoc\u0105 vi: [me@linuxbox ~]$ rm -f foo.txt [me@linuxbox ~]$ vi foo.txt Je\u015bli wszystko p\u00f3jdzie dobrze, powinni\u015bmy uzyska\u0107 na ekranie nast\u0119puj\u0105cy widok: ~ ~ \"foo.txt\" [New File] Znaki tyldy (~) na pocz\u0105tku wierszy oznaczaj\u0105, \u017ce wiersze te nie zawieraj\u0105 \u017cadnego tekstu. Nasz plik jest wi\u0119c pusty. Niczego jeszcze nie wpisujmy! Kolejn\u0105 wa\u017cn\u0105 funkcj\u0105 vi, kt\u00f3r\u0105 musimy pozna\u0107 (opr\u00f3cz sposobu wychodzenia z programu) jest to, \u017ce vi mo\u017ce pracowa\u0107 w r\u00f3\u017cnych trybach. Po uruchomieniu program znajduje si\u0119 w trybie polece\u0144. W tym trybie niemal ka\u017cdy klawisz odpowiada poleceniu, dlatego je\u015bli zaczniemy co\u015b pisa\u0107, vi w\u0142a\u015bciwie oszaleje, pozostawiaj\u0105c nas z wielkim ba\u0142aganem.","title":"Tryby edycji"},{"location":"VIM/Tryb_Edycji/#waczanie-trybu-edycji","text":"Aby doda\u0107 do pliku troch\u0119 tekstu, musimy najpierw w\u0142\u0105czy\u0107 tryb edycji. W tym celu nale\u017cy nacisn\u0105\u0107 klawisz i. Gdy to zrobimy, powinni\u015bmy nast\u0119puj\u0105cy napis w dolnej cz\u0119\u015bci ekranu, o ile vim dzia\u0142a w zwyk\u0142ym wzbogaconym trybie (nie b\u0119dzie on widoczny w trybie zgodnym z vi): -- INSERT -- Mo\u017cemy ju\u017c wpisa\u0107 jaki\u015b tekst. Na przyk\u0142ad: Szybki br\u0105zowy lis przeskoczy\u0142 nad leniwym psem. Aby wyj\u015b\u0107 z trybu wstawiania i powr\u00f3ci\u0107 do trybu polece\u0144, nale\u017cy nacisn\u0105\u0107 klawisz Esc.","title":"W\u0142\u0105czanie trybu edycji"},{"location":"VIM/Tryb_Edycji/#zapisywanie-pracy","text":"Aby zapisa\u0107 zmiany wprowadzone w pliku, musimy w\u0142\u0105czy\u0107 polecenia ex, pozostaj\u0105c w trybie polece\u0144. Jest to bardzo \u0142atwe, wystarczy nacisn\u0105\u0107 klawisz :. Gdy to zrobimy, w dolnej cz\u0119\u015bci ekranu powinien si\u0119 pojawi\u0107 znak dwukropka: : Aby zapisa\u0107 nasz zmodyfikowany plik, po dwukropku wpisujemy w, a nast\u0119pnie naciskamy Enter: :w Plik zostanie zapisany na twardym dysku. W dolnej cz\u0119\u015bci ekranu powinni\u015bmy uzyska\u0107 potwierdzenie, jak poni\u017cej: \"foo.txt\" [New] 1L, 46C written","title":"Zapisywanie pracy"},{"location":"VIM/Zmiana_polozenia_kursora/","text":"Zmiana po\u0142o\u017cenia kursora W trybie polece\u0144 vi mamy do dyspozycji du\u017c\u0105 liczb\u0119 polece\u0144 s\u0142u\u017c\u0105cych do zmiany po\u0142o\u017cenia kursora. Niekt\u00f3re z nich s\u0105 takie same jak w programie less. W tabeli ponizej opisano pewien zestaw polece\u0144. Klawisze s\u0142u\u017c\u0105ce do zmiany po\u0142o\u017cenia kursora: Klawisz Przenosi kursor l lub klawisz strza\u0142ki w prawo w prawo o jeden znak h lub klawisz strza\u0142ki w lewo w lewo o jeden znak j lub klawisz strza\u0142ki w d\u00f3\u0142 o jeden wiersz w d\u00f3\u0142 k lub klawisz strza\u0142ki w g\u00f3r\u0119 o jeden wiersz w g\u00f3r\u0119 0 (zero) na pocz\u0105tek bie\u017c\u0105cego wiersza ^ do pierwszego znaku nieb\u0119d\u0105cego bia\u0142ym znakiem w bie\u017c\u0105cym wierszu $ na koniec bie\u017c\u0105cego wiersza w na pocz\u0105tek kolejnego s\u0142owa lub znaku interpunkcyjnego W na pocz\u0105tek kolejnego s\u0142owa. Ignoruje znaki interpunkcyjne b na pocz\u0105tek wcze\u015bniejszego s\u0142owa lub znaku interpunkcyjnego B na pocz\u0105tek wcze\u015bniejszego s\u0142owa. Ignoruje znaki interpunkcyjne Ctrl+F lub klawisz Page Down w d\u00f3\u0142 o jedn\u0105 stron\u0119 Ctrl+B lub klawisz Page Up w g\u00f3r\u0119 o jedn\u0105 stron\u0119 liczba+G do wiersza o numerze liczba (na przyk\u0142ad 1G przeniesie kursor do pierwszego wiersza pliku) G do ostatniego wiersza pliku","title":"Zmiana polozenia kursora"},{"location":"VIM/Zmiana_polozenia_kursora/#zmiana-poozenia-kursora","text":"W trybie polece\u0144 vi mamy do dyspozycji du\u017c\u0105 liczb\u0119 polece\u0144 s\u0142u\u017c\u0105cych do zmiany po\u0142o\u017cenia kursora. Niekt\u00f3re z nich s\u0105 takie same jak w programie less. W tabeli ponizej opisano pewien zestaw polece\u0144. Klawisze s\u0142u\u017c\u0105ce do zmiany po\u0142o\u017cenia kursora: Klawisz Przenosi kursor l lub klawisz strza\u0142ki w prawo w prawo o jeden znak h lub klawisz strza\u0142ki w lewo w lewo o jeden znak j lub klawisz strza\u0142ki w d\u00f3\u0142 o jeden wiersz w d\u00f3\u0142 k lub klawisz strza\u0142ki w g\u00f3r\u0119 o jeden wiersz w g\u00f3r\u0119 0 (zero) na pocz\u0105tek bie\u017c\u0105cego wiersza ^ do pierwszego znaku nieb\u0119d\u0105cego bia\u0142ym znakiem w bie\u017c\u0105cym wierszu $ na koniec bie\u017c\u0105cego wiersza w na pocz\u0105tek kolejnego s\u0142owa lub znaku interpunkcyjnego W na pocz\u0105tek kolejnego s\u0142owa. Ignoruje znaki interpunkcyjne b na pocz\u0105tek wcze\u015bniejszego s\u0142owa lub znaku interpunkcyjnego B na pocz\u0105tek wcze\u015bniejszego s\u0142owa. Ignoruje znaki interpunkcyjne Ctrl+F lub klawisz Page Down w d\u00f3\u0142 o jedn\u0105 stron\u0119 Ctrl+B lub klawisz Page Up w g\u00f3r\u0119 o jedn\u0105 stron\u0119 liczba+G do wiersza o numerze liczba (na przyk\u0142ad 1G przeniesie kursor do pierwszego wiersza pliku) G do ostatniego wiersza pliku","title":"Zmiana po\u0142o\u017cenia kursora"}]}